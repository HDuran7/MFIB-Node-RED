[{"id":"b236a71bdfc68eef","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"9041effcc0d9d735","type":"tab","label":"1. People","disabled":false,"info":""},{"id":"a871183c24f29819","type":"tab","label":"2. Safety","disabled":false,"info":"# Safety Uploader\r\n\r\nDescription: Create a form uploader to upload safety accidents to influx and create a new Data_Type within Influx to store this data in called ‘Safety_Records’\r\n\r\n## **1.\tSafety Uploader Form** to have the following items:\r\n - Date of upload (Datetime, automatically populated)\r\n - Date of incident (Datetime)\r\n - Incident Category (String, dropdown list: Injury, Dangerous Occurrence, Other)\r\n - Type (String, dropdown list: this should be dynamic depending on what the user has selected for ‘Incident Category’. If ‘Other’ was selected then this should be free text, otherwise it should be a list. (lists tbc)\r\n - Accident details (string, free text box)\r\n\r\n## **2.\tInflux**\r\n - The safety data should be added as a new Data_Type in Influx called ‘Safety_Records’\r\n - A gauge chart should be created to show a single value for the incident rate. This should be calculated as the number of incidents in the last 30 days, multiplied by 12,000.\r\n - A bar chart should be created to show the incidents by day, with a line trend plotted on a secondary axis showing the rolling 30d average of the incident rate (as calculated above)\r\n"},{"id":"2f77559e659d4c84","type":"tab","label":"3. Cost & Quality","disabled":false,"info":""},{"id":"7ecfa83a7cb9ce03","type":"tab","label":"4. Scheduling","disabled":false,"info":""},{"id":"9442f217a745fab1","type":"tab","label":"Uploaders>>>","disabled":false,"info":""},{"id":"2bc3b84e0697379a","type":"tab","label":"Auto Uploader Factory 0","disabled":false,"info":""},{"id":"d3bbf792b935a55c","type":"tab","label":"Influx Connection","disabled":false,"info":""},{"id":"33d7f94784d4d145","type":"tab","label":"Shift Uploader","disabled":false,"info":""},{"id":"6b12705d.3289f","type":"subflow","name":"Process Payload for Drop Down","info":"","category":"","in":[{"x":80,"y":180,"wires":[{"id":"bf6a3056.7e8ef"}]}],"out":[{"x":1000,"y":280,"wires":[{"id":"6f7b4040.334ed","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"40775d37.dc6d14","type":"subflow","name":"Timer Bool / Float","info":"","category":"","in":[{"x":60,"y":180,"wires":[{"id":"7ba65bfc.eb2ce4"}]}],"out":[{"x":1080,"y":80,"wires":[{"id":"3e056874.acb158","port":0}]},{"x":1080,"y":220,"wires":[{"id":"d6ba68c9.8b2fc8","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"2924702c.b33a7","type":"subflow","name":"ui-table handler","info":"# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table","category":"dashboard","in":[{"x":54,"y":85,"wires":[{"id":"5eb0bd6b.74b794"}]}],"out":[{"x":360,"y":85,"wires":[{"id":"5eb0bd6b.74b794","port":1}]},{"x":360,"y":136,"wires":[{"id":"5eb0bd6b.74b794","port":2}]}],"env":[{"name":"tabulator","type":"json","value":"{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}","ui":{"icon":"font-awesome/fa-table","label":{"en-US":"Tabulator"},"type":"input","opts":{"types":["json","env"]}}},{"name":"tableDataProp","type":"str","value":"row","ui":{"icon":"font-awesome/fa-tag","label":{"en-US":"rowProperty"}}},{"name":"tableIndex","type":"str","value":"$topic","ui":{"icon":"font-awesome/fa-indent","label":{"en-US":"Index"},"type":"input","opts":{"types":["str","json","env"]}}},{"name":"maxRows","type":"num","value":"0","ui":{"icon":"font-awesome/fa-list-ol","type":"input","opts":{"types":["num","bool","env"]}}},{"name":"maxStore","type":"num","value":"0","ui":{"icon":"font-awesome/fa-database","type":"input","opts":{"types":["num","env"]}}},{"name":"dashboard","type":"str","value":"Remote Device Table","ui":{"icon":"font-awesome/fa-dashboard","label":{"en-US":"Dashboard"},"type":"input","opts":{"types":["str","env"]}}},{"name":"tableContext","type":"json","value":"{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}","ui":{"icon":"font-awesome/fa-database","label":{"en-US":"Context"},"type":"input","opts":{"types":["json","env"]}}}],"color":"#3FADB5","icon":"node-red-dashboard/ui_slider.png","status":{"x":360,"y":34,"wires":[{"id":"5eb0bd6b.74b794","port":0}]}},{"id":"7c394fa8c207bff3","type":"subflow","name":"Timer Bool / Float (2)","info":"","category":"","in":[{"x":60,"y":180,"wires":[{"id":"0660ac8428cb98b5"}]}],"out":[{"x":1080,"y":80,"wires":[{"id":"166384a24d7c68d3","port":0}]},{"x":1080,"y":220,"wires":[{"id":"3bccc593e327823f","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"945c3a3d63623022","type":"tls-config","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","servername":"","verifyservercert":false,"alpnprotocol":""},{"id":"fc25b102546e8c0a","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#1b1c1d","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":true},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Factory Data Uploader","hideToolbar":"false","allowSwipe":"false","lockMenu":"true","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"1cf65105894e153c","type":"ui_tab","name":"Factory Name","icon":"dashboard","disabled":false,"hidden":false},{"id":"0c1ec41161862665","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"database","name":"MFIB Influx","usetls":false,"tls":"945c3a3d63623022","influxdbVersion":"2.0","url":"https://eu-central-1-1.aws.cloud2.influxdata.com/","rejectUnauthorized":false},{"id":"34f7757a5faed4d6","type":"ui_group","name":"Input Data","tab":"b10e17452f2c29c9","order":1,"disp":true,"width":"6","collapse":false},{"id":"f11a8c078ddbe740","type":"ui_group","name":"Quality Lab Checks","tab":"d1c5c60ac278b36c","order":1,"disp":true,"width":"7","collapse":false},{"id":"b10e17452f2c29c9","type":"ui_tab","name":"Cost Data","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"94274ca113896f3c","type":"ui_tab","name":"Batch Data","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"d1c5c60ac278b36c","type":"ui_tab","name":"QC Data","icon":"dashboard","disabled":false,"hidden":false},{"id":"3d85cf8c9c610fe2","type":"ui_tab","name":"Revenue Data","icon":"dashboard","disabled":false,"hidden":false},{"id":"3a22c6ce342c7d96","type":"ui_group","name":"Revenue Data","tab":"3d85cf8c9c610fe2","order":1,"disp":true,"width":"6","collapse":false},{"id":"43d9ab7f5b004a50","type":"ui_group","name":"Batch Data","tab":"94274ca113896f3c","order":1,"disp":true,"width":"6","collapse":false},{"id":"5d08f31539a1a0a0","type":"ui_group","name":"Factory Name","tab":"1cf65105894e153c","order":1,"disp":true,"width":"6","collapse":false},{"id":"1f5be5845c7c7e14","type":"ui_group","name":"Safety Uploader","tab":"49eda00b543938a2","order":1,"disp":true,"width":"8","collapse":false},{"id":"49eda00b543938a2","type":"ui_tab","name":"Safety Uploader","icon":"security","disabled":false,"hidden":false},{"id":"b03d1b43277bb06f","type":"ui_group","name":"Bottle Inspection","tab":"d1c5c60ac278b36c","order":1,"disp":true,"width":"7","collapse":false},{"id":"7a39981f42617916","type":"ui_group","name":"Survey","tab":"1acd1871ffbdafad","order":1,"disp":true,"width":"6","collapse":false},{"id":"1acd1871ffbdafad","type":"ui_tab","name":"Team Satisfaction Survey","icon":"receipt","disabled":false,"hidden":false},{"id":"961d37f5d3a48379","type":"ui_group","name":"Scheduling","tab":"0783ef3591c14355","order":1,"disp":true,"width":"18","collapse":false},{"id":"4c79740b32773ebd","type":"ui_group","name":"dialog","tab":"0783ef3591c14355","order":2,"disp":false,"width":"18","collapse":false},{"id":"0783ef3591c14355","type":"ui_tab","name":"Scheduling","icon":"schedule","disabled":false,"hidden":false},{"id":"bf6a3056.7e8ef","type":"split","z":"6b12705d.3289f","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":190,"y":180,"wires":[["c556cfa9.d0b72"]]},{"id":"c556cfa9.d0b72","type":"split","z":"6b12705d.3289f","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":320,"y":180,"wires":[["9a18e037.b17be"]]},{"id":"704a2511.9c2f4c","type":"join","z":"6b12705d.3289f","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1110,"y":180,"wires":[["6f7b4040.334ed"]]},{"id":"3a4028a2.7d03d8","type":"switch","z":"6b12705d.3289f","name":"","property":"parts.parts.index","propertyType":"msg","rules":[{"t":"eq","v":"msg.parts.parts.count - 1","vt":"jsonata"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":590,"y":180,"wires":[["cc282a86.a7a1d8"],["5d76127c.74bdbc"]]},{"id":"cc282a86.a7a1d8","type":"change","z":"6b12705d.3289f","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":750,"y":140,"wires":[["5d76127c.74bdbc"]]},{"id":"9a18e037.b17be","type":"switch","z":"6b12705d.3289f","name":"","property":"parts.key","propertyType":"msg","rules":[{"t":"eq","v":"payload_key","vt":"msg"}],"checkall":"true","repair":false,"outputs":1,"x":450,"y":180,"wires":[["3a4028a2.7d03d8"]]},{"id":"5d76127c.74bdbc","type":"change","z":"6b12705d.3289f","name":"","rules":[{"t":"delete","p":"topic","pt":"msg"},{"t":"delete","p":"parts","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":940,"y":180,"wires":[["704a2511.9c2f4c"]]},{"id":"6f7b4040.334ed","type":"change","z":"6b12705d.3289f","name":"","rules":[{"t":"set","p":"options","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":830,"y":280,"wires":[[]]},{"id":"2182c5b4.ca987a","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"enabled","pt":"msg","to":"false","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":80,"wires":[["3e056874.acb158"]]},{"id":"8cc1754a.32bf98","type":"switch","z":"40775d37.dc6d14","name":"","property":"payload","propertyType":"msg","rules":[{"t":"istype","v":"boolean","vt":"boolean"},{"t":"istype","v":"number","vt":"number"},{"t":"else"}],"checkall":"true","repair":false,"outputs":3,"x":350,"y":180,"wires":[["2182c5b4.ca987a"],["1c6d595.aafafa7"],["1ca7ae5a.69b9e2"]]},{"id":"297d3bb6.6199e4","type":"debug","z":"40775d37.dc6d14","name":"","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":360,"wires":[]},{"id":"1ca7ae5a.69b9e2","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"error","pt":"msg","to":"Input string not number or boolean","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":360,"wires":[["297d3bb6.6199e4"]]},{"id":"1c6d595.aafafa7","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":180,"wires":[["3e056874.acb158"]]},{"id":"1fe64f8c.4efd","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"false","tot":"bool"},{"t":"set","p":"enabled","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":120,"wires":[["3e056874.acb158"]]},{"id":"5c198e9f.90141","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":220,"wires":[["3e056874.acb158"]]},{"id":"d6ba68c9.8b2fc8","type":"change","z":"40775d37.dc6d14","name":"Timer","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":970,"y":220,"wires":[[]]},{"id":"3e056874.acb158","type":"change","z":"40775d37.dc6d14","name":"Output","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":970,"y":80,"wires":[[]]},{"id":"7ba65bfc.eb2ce4","type":"change","z":"40775d37.dc6d14","name":"","rules":[{"t":"set","p":"warning","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":200,"y":180,"wires":[["8cc1754a.32bf98"]]},{"id":"5eb0bd6b.74b794","type":"function","z":"2924702c.b33a7","name":"handle tableData","func":"var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":192,"y":85,"wires":[[],[],[]],"icon":"font-awesome/fa-table"},{"id":"8b029c0ddf0215ba","type":"mytimeout","z":"7c394fa8c207bff3","name":"","outtopic":"","outsafe":"","outwarning":"Warning","outunsafe":"off","warning":"5","timer":"30","debug":false,"ndebug":false,"ignoreCase":false,"repeat":false,"again":false,"x":530,"y":120,"wires":[["f5392369d10da0ab"],["3bccc593e327823f"]]},{"id":"e4ee0d228b922a80","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"enabled","pt":"msg","to":"false","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":80,"wires":[["166384a24d7c68d3"]]},{"id":"387d7158864ac807","type":"switch","z":"7c394fa8c207bff3","name":"","property":"payload","propertyType":"msg","rules":[{"t":"istype","v":"boolean","vt":"boolean"},{"t":"istype","v":"number","vt":"number"},{"t":"else"}],"checkall":"true","repair":false,"outputs":3,"x":350,"y":180,"wires":[["e4ee0d228b922a80","8b029c0ddf0215ba"],["9f24706468bf6b52","f5a2a166cfa3f756"],["14107a3878c15e7c"]]},{"id":"2272b57ab40de82e","type":"debug","z":"7c394fa8c207bff3","name":"","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":360,"wires":[]},{"id":"14107a3878c15e7c","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"error","pt":"msg","to":"Input string not number or boolean","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":360,"wires":[["2272b57ab40de82e"]]},{"id":"f5a2a166cfa3f756","type":"mytimeout","z":"7c394fa8c207bff3","name":"","outtopic":"","outsafe":"","outwarning":"Warning","outunsafe":"off","warning":"5","timer":"30","debug":false,"ndebug":false,"ignoreCase":false,"repeat":false,"again":false,"x":530,"y":220,"wires":[["5e5a6fa54b3fd18f"],["3bccc593e327823f"]]},{"id":"9f24706468bf6b52","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":180,"wires":[["166384a24d7c68d3"]]},{"id":"f5392369d10da0ab","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"false","tot":"bool"},{"t":"set","p":"enabled","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":120,"wires":[["166384a24d7c68d3"]]},{"id":"5e5a6fa54b3fd18f","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":220,"wires":[["166384a24d7c68d3"]]},{"id":"3bccc593e327823f","type":"change","z":"7c394fa8c207bff3","name":"Timer","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":970,"y":220,"wires":[[]]},{"id":"166384a24d7c68d3","type":"change","z":"7c394fa8c207bff3","name":"Output","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":970,"y":80,"wires":[[]]},{"id":"0660ac8428cb98b5","type":"change","z":"7c394fa8c207bff3","name":"","rules":[{"t":"set","p":"warning","pt":"msg","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":200,"y":180,"wires":[["387d7158864ac807"]]},{"id":"b8cb8e8508e9248b","type":"debug","z":"2bc3b84e0697379a","name":"Upload Output Count","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"delay","targetType":"msg","statusVal":"","statusType":"auto","x":1340,"y":500,"wires":[]},{"id":"66a37f5e24cc0253","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Protocol_Name: msg.payload[\"Protocol Name\"],\n    Start_Time: msg.Actual_Start,\n    End_Time: msg.Actual_End,\n    Starting_Totaliser: msg.payload[\"Starting Totaliser\"],\n    Ending_Totaliser: msg.payload[\"Ending Totaliser\"],\n    Other_Info: msg.payload[\"Other Info\"],\n    Upload_Time: msg.now,\n    Auto_Upload_Delay: msg.delay / 1000,\n    Product_Name: String(msg.payload[\"Product Name\"]),\n    \n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Protocols\",\n      Protocol: msg.payload[\"Protocol Name\"],\n}];\n\nmsg.measurement = flow.get(\"_measurement\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":440,"wires":[["a2328626fd2d9322","2ce25b95906e6584","68a4048119e1fb0e"]]},{"id":"d97df53fb0b3d31b","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":890,"y":180,"wires":[["f1d6b37a7cb3da67"]]},{"id":"a866f7bd8bb68115","type":"inject","z":"2bc3b84e0697379a","name":"","props":[{"p":"payload"},{"p":"batch_start","v":"","vt":"date"}],"repeat":"31200","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":130,"y":360,"wires":[["064b756b6fed8f6d","513116b72b242687","70b83790a121d83c","4684cb6d8d584d9a","6dce8455f18c8508"]]},{"id":"2bdd2f8c8eb87dc0","type":"delay","z":"2bc3b84e0697379a","name":"","pauseType":"delayv","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"minutes","drop":false,"x":1340,"y":300,"wires":[["b7a86d04405b7860"]]},{"id":"f1d6b37a7cb3da67","type":"function","z":"2bc3b84e0697379a","name":"Delay to ms","func":"msg.delay=msg.payload.Delay_end*1000;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":180,"wires":[["c040d36278ad80d0"]]},{"id":"3d51d638048842e6","type":"function","z":"2bc3b84e0697379a","name":"Add delay and batch start","func":"msg.Actual_Start=(msg.payload.Delay_start*1000)+msg.batch_start;\nmsg.Actual_End=(msg.payload.Delay_end*1000)+msg.batch_start;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":300,"wires":[["88b9da585a0c07a6"]]},{"id":"b7a86d04405b7860","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":440,"wires":[["66a37f5e24cc0253"]]},{"id":"2aef3813f172aca8","type":"moment","z":"2bc3b84e0697379a","name":"","topic":"","input":"Actual_start","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"DD/MM/YYYY hh:mm","locale":"en-GB","output":"payload.Actual_Start","outputType":"msg","outTz":"Europe/London","x":860,"y":300,"wires":[["8b1801cfc4cc5b0b"]]},{"id":"8b1801cfc4cc5b0b","type":"moment","z":"2bc3b84e0697379a","name":"","topic":"","input":"Actual_end","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"DD/MM/YYYY hh:mm","locale":"en-GB","output":"payload.Actual_End","outputType":"msg","outTz":"Europe/London","x":1120,"y":300,"wires":[["2bdd2f8c8eb87dc0"]]},{"id":"a2328626fd2d9322","type":"counter","z":"2bc3b84e0697379a","name":"","init":"0","step":"1","lower":null,"upper":null,"mode":"increment","outputs":"1","x":900,"y":500,"wires":[["2f5a84271e89c380"]]},{"id":"2ce25b95906e6584","type":"debug","z":"2bc3b84e0697379a","name":"Upload Output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":920,"y":400,"wires":[]},{"id":"2f5a84271e89c380","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"delay","pt":"msg","to":"msg.delay/1000","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1100,"y":500,"wires":[["b8cb8e8508e9248b"]]},{"id":"d51f8535acd8bc38","type":"debug","z":"2bc3b84e0697379a","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":590,"y":120,"wires":[]},{"id":"064b756b6fed8f6d","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"batch_start","pt":"flow","to":"batch_start","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":180,"wires":[["d51f8535acd8bc38","e55d755c8144359d"]]},{"id":"c040d36278ad80d0","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"batch_start","pt":"msg","to":"batch_start","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":1230,"y":180,"wires":[["3d51d638048842e6"]]},{"id":"461740b4dfa3d1d5","type":"link in","z":"d3bbf792b935a55c","name":"Link in to LT Upload","links":["22716e7d6f042137","f899d70356eab054","ef5c7f34be1e70cf","360eeb81b3d8c142","9dfee2c20687423f","a1c9825c04661351","37f86bb516b13172","12af08ce7ac3c6fe","70cbfd157d68241e","0640a685b88d12b9","4b8aa4a9.b8aacc","0a3b1841dc7750a4","82a59943a70dab8b","fadf9b1286904dbb","fd3c8469d6144c20","6f9929caf97e58e8"],"x":375,"y":460,"wires":[["f7f89ed6730f5e95"]]},{"id":"68a4048119e1fb0e","type":"link out","z":"2bc3b84e0697379a","name":"Link to Influx Upoload","links":["c5218fbb.92533","39d0fb39f332f7f0"],"x":855,"y":440,"wires":[]},{"id":"70c8efce676277b7","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":500,"wires":[]},{"id":"513116b72b242687","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"0","tot":"num"},{"t":"delete","p":"payload","pt":"msg"},{"t":"delete","p":"batch_start","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":420,"y":500,"wires":[["a2328626fd2d9322"]]},{"id":"6c26e6e55b7ab5f4","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    FM1:msg.payload.FM1,\n    FM2:msg.payload.FM2,\n    FM3:msg.payload.FM3,\n    Pre_heater: msg.payload[\"Pre Heater\"],\n    Reactor: msg.payload.Reactor,\n    Product_Out: msg.payload[\"Product Out\"],\n    HeCoolingOut: msg.payload.HeCoolingOut,\n    HeIn: msg.payload.HeIn,\n    Ambient_Air: msg.payload[\"Ambient Air\"],\n    Process_Water_Vessel: msg.payload[\"Process Water Vessel\"],\n    Reactor_Recirc_In: msg.payload[\"Reactor Recirc In\"],\n    Process_Waste_Vessel: msg.payload[\"Process Waste Vessel\"],\n    Pre_Heater_Out: msg.payload[\"Pre Heater Out\"],\n    Reactor_Recirc_Out: msg.payload[\"Reactor Recirc Out\"],\n    Pre_Heater_vessel: msg.payload[\"Pre Heater Vessel\"],\n    SV1_Setting: msg.payload[\"SV1 Setting\"],\n    SV1_Actual: msg.payload[\"SV1 Actual\"],\n    SV2_Setting: msg.payload[\"SV2 Setting\"],\n    SV2_Actual: msg.payload[\"SV2 Actual\"],\n    SV3_Setting: msg.payload[\"SV3 Setting\"],\n    SV3_Actual: msg.payload[\"SV3 Actual\"],\n    SV4_Setting: msg.payload[\"SV4 Setting\"],\n    SV4_Actual: msg.payload[\"SV4 Actual\"],\n    SV5_Setting: msg.payload[\"SV5 Setting\"],\n    SV5_Actual: msg.payload[\"SV5 Actual\"],\n    SV6_Setting: msg.payload[\"SV6 Setting\"],\n    SV6_Actual: msg.payload[\"SV6 Actual\"],\n    SV7_Setting: msg.payload[\"SV7 Setting\"],\n    SV7_Actual: msg.payload[\"SV7 Actual\"],\n    SV8_Setting: msg.payload[\"SV8 Setting\"],\n    SV8_Actual: msg.payload[\"SV8 Actual\"],\n    SV9_Setting: msg.payload[\"SV9 Setting\"],\n    SV9_Actual: msg.payload[\"SV9 Actual\"],\n    SV10_Setting: msg.payload[\"SV10 Setting\"],\n    SV10_Actual: msg.payload[\"SV10 Actual\"],\n    SV11_Setting: msg.payload[\"SV11 Setting\"],\n    SV11_Actual: msg.payload[\"SV11 Actual\"],\n    P1: msg.payload.P1,\n    P2: msg.payload.P2,\n    P3: msg.payload.P3,\n    P4: msg.payload.P4,\n    P5: msg.payload.P5,\n    P6: msg.payload.P6,\n    P7: msg.payload.P7,\n    \n    Pre_Heater_Rate: msg.payload[\"Pre Heater Rate\"],\n    Reactor_Rate: msg.payload[\"Reactor Rate\"],\n    Spare_Rate: msg.payload[\"Spare Rate\"],\n    Spare_State: msg.payload[\"Spare State\"],\n    Reactor_State: msg.payload[\"Reactor State\"],\n    Pre_Heater_State: msg.payload[\"Pre Heater State\"],\n    \n    Brix_Value: msg.payload[\"Brix Value\"],\n    Brix_Temperature: msg.payload[\"Brix Temperature\"],\n    Product_Name: msg.payload[\"Product Name\"],\n    Batch_start: msg.starttime,\n    \n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Continuous\"\n//    GarbageTag : \"Static Tag\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":780,"wires":[["57d7f00bc4d534c4","3ba05c025e670284"]]},{"id":"2bdc2cf5ef39b56f","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":605.0000228881836,"y":702.5000314712524,"wires":[["b682973fe083aa25"]]},{"id":"cf7c10432d7177d5","type":"delay","z":"2bc3b84e0697379a","name":"","pauseType":"delayv","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1075.0000228881836,"y":702.5000314712524,"wires":[["9f430d32344a8d55"]]},{"id":"b682973fe083aa25","type":"function","z":"2bc3b84e0697379a","name":"Delay to ms","func":"msg.delay=msg.payload.Delay*1000;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":865.0000228881836,"y":702.5000314712524,"wires":[["cf7c10432d7177d5"]]},{"id":"2c0734077e8fe49b","type":"debug","z":"2bc3b84e0697379a","name":"Upload Output","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1160,"y":840,"wires":[]},{"id":"57d7f00bc4d534c4","type":"counter","z":"2bc3b84e0697379a","name":"","init":"0","step":"1","lower":null,"upper":null,"mode":"increment","outputs":"1","x":960,"y":840,"wires":[["2c0734077e8fe49b"]]},{"id":"9f430d32344a8d55","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":780,"wires":[["6c26e6e55b7ab5f4"]]},{"id":"3ba05c025e670284","type":"link out","z":"2bc3b84e0697379a","name":"Link to Influx Upoload","links":["c5218fbb.92533","39d0fb39f332f7f0"],"x":915,"y":780,"wires":[]},{"id":"70b83790a121d83c","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"reset","pt":"msg","to":"0","tot":"num"},{"t":"delete","p":"payload","pt":"msg"},{"t":"delete","p":"batch_start","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":420,"y":840,"wires":[["57d7f00bc4d534c4"]]},{"id":"c7082383c8774e79","type":"inject","z":"d3bbf792b935a55c","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"00 12 * * *","once":false,"onceDelay":"0","topic":"","payloadType":"str","x":150,"y":100,"wires":[["001ec410680affe9"]]},{"id":"08df3a382802b220","type":"ui_dropdown","z":"d3bbf792b935a55c","name":"","label":"Factory Name","tooltip":"","place":"Select option","group":"5d08f31539a1a0a0","order":2,"width":0,"height":0,"passthru":false,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"_measurement","topicType":"str","x":840,"y":100,"wires":[["dc96a1c3272ad3ed"]]},{"id":"1c73ad3027735f47","type":"influxdb in","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"Grab _Fields","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":490,"y":100,"wires":[["59d363dc5de4fd3a"]]},{"id":"001ec410680affe9","type":"function","z":"d3bbf792b935a55c","name":"Setup Query","func":"newMsg={};\n\nnewMsg.query = 'from(bucket: \"LongTermBucket\") |> range(start: -30d, stop: now()) |> keep(columns: [\"_measurement\"])'\nnewMsg.query = newMsg.query + ' |> group() |> unique(column: \"_measurement\") |> keep(columns: [\"_measurement\"])';\n\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":100,"wires":[["1c73ad3027735f47"]]},{"id":"59d363dc5de4fd3a","type":"function","z":"d3bbf792b935a55c","name":"Compress Array","func":"array = [];\nnewMsg = {};\n\nmsg.payload.forEach(myFunction);\n\nfunction myFunction(item, index) {\n  array[index] = msg.payload[index]._measurement\n}\n\n// var obj = Object.fromEntries(array);\n// console.log(obj);\n\nnewMsg.options = array;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":100,"wires":[["08df3a382802b220"]]},{"id":"740aed061a4bfc0d","type":"ui_text_input","z":"d3bbf792b935a55c","name":"","label":"Manual Override Factory Name","tooltip":"","group":"5d08f31539a1a0a0","order":3,"width":0,"height":0,"passthru":true,"mode":"text","delay":"0","topic":"","x":790,"y":160,"wires":[["dc96a1c3272ad3ed"]]},{"id":"16585413de948058","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":460,"wires":[]},{"id":"dc96a1c3272ad3ed","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"_measurement","pt":"global","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1090,"y":120,"wires":[["8004365393d56dcc","88bd1c37fbe1d081","0b7c47e10e26f49a"]]},{"id":"8004365393d56dcc","type":"debug","z":"d3bbf792b935a55c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1310,"y":160,"wires":[]},{"id":"f7f89ed6730f5e95","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"_measurement","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":460,"wires":[["16585413de948058","70c8efce676277b7"]]},{"id":"7e8234fb1ab4db10","type":"link out","z":"d3bbf792b935a55c","name":"Updated Factory Name Send","links":["3ad70f5989ff8de0","71c2bafb0bcd9771"],"x":1635,"y":80,"wires":[]},{"id":"88bd1c37fbe1d081","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"delete","p":"payload","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.Data_Type","pt":"msg","to":"Name_Upload","tot":"str"},{"t":"set","p":"payload._value","pt":"msg","to":"_measurement","tot":"global"},{"t":"set","p":"payload._field","pt":"msg","to":"Factory_Name","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1340,"y":120,"wires":[["2a3ba2803394f7db"]]},{"id":"2a3ba2803394f7db","type":"function","z":"d3bbf792b935a55c","name":"","func":"newMsg = {};\ninputArray = msg.payload;\n// string=\"\";\n\npayloadArray = [];\n\nfieldObj = {};\ntagObj = {};\nop_field=\"\";\nop_value=\"\";\nop_measurement=\"\";\n\nfor (const [key, value] of Object.entries(inputArray)){\n    // string = string+ `${key}: ${value}` + \"; \"\n\n    switch(key) {\n      case \"_field\":\n        op_field = value\n        break;\n      case \"_value\":\n        op_value = value\n        break;\n      case \"_measurement\":\n        op_measurement = value\n        break;\n      default:\n        tagObj[key]=value;\n        }\n}\n\nfieldObj[op_field]=op_value;\n\npayloadArray[0] = fieldObj;\npayloadArray[1] = tagObj;\nnewMsg.payload = payloadArray;\n\nreturn newMsg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1520,"y":120,"wires":[["d009e2f4ec782e9d","ef5c7f34be1e70cf"]]},{"id":"ef5c7f34be1e70cf","type":"link out","z":"d3bbf792b935a55c","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5","c5218fbb.92533","1ed1794e73e191ca"],"x":1635,"y":120,"wires":[]},{"id":"d009e2f4ec782e9d","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1670,"y":160,"wires":[]},{"id":"0b7c47e10e26f49a","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"delete","p":"payload","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1350,"y":60,"wires":[["dcb3f8b537818167"]]},{"id":"dcb3f8b537818167","type":"delay","z":"d3bbf792b935a55c","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1530,"y":80,"wires":[["7e8234fb1ab4db10"]]},{"id":"0f771b7fbd059a22","type":"ui_text","z":"d3bbf792b935a55c","group":"5d08f31539a1a0a0","order":1,"width":0,"height":0,"name":"","label":"Current Factory Name","format":"{{msg.payload}}","layout":"row-spread","x":820,"y":280,"wires":[]},{"id":"3fd48c7fd0c5e149","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"delete","p":"payload","pt":"msg"},{"t":"set","p":"payload","pt":"msg","to":"_measurement","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":500,"y":280,"wires":[["0f771b7fbd059a22"]]},{"id":"dc702c79b610aa4b","type":"inject","z":"d3bbf792b935a55c","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":280,"wires":[["3fd48c7fd0c5e149"]]},{"id":"71c2bafb0bcd9771","type":"link in","z":"d3bbf792b935a55c","name":"Update Factory Name","links":["7e8234fb1ab4db10"],"x":355,"y":320,"wires":[["3fd48c7fd0c5e149"]]},{"id":"fc7ed6431c22f2f5","type":"inject","z":"2bc3b84e0697379a","name":"Flush","props":[{"p":"flush","v":"true","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":1210,"y":240,"wires":[["2bdd2f8c8eb87dc0"]]},{"id":"88b9da585a0c07a6","type":"function","z":"2bc3b84e0697379a","name":"Add ProdName","func":"if (!msg.payload.hasOwnProperty(\"Product Name\")){\n    msg.payload[\"Product Name\"]=\"\";}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":640,"y":300,"wires":[["2aef3813f172aca8"]]},{"id":"39d0fb39f332f7f0","type":"link in","z":"d3bbf792b935a55c","name":"MFIB0Factory","links":["3ba05c025e670284","68a4048119e1fb0e"],"x":375,"y":880,"wires":[["4f83e7314205aac8"]]},{"id":"c073c492614dee95","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":940,"wires":[]},{"id":"59b8cb28e0b8e6fc","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"FactoryUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"FactoryBucket","x":820,"y":880,"wires":[]},{"id":"4f83e7314205aac8","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB0","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":880,"wires":[["59b8cb28e0b8e6fc","c073c492614dee95"]]},{"id":"3b7175eb9e1cc6ae","type":"inject","z":"33d7f94784d4d145","name":"Send shift data","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":160,"y":120,"wires":[["75bf055ee87bce4a"]]},{"id":"05bedbf703f595b5","type":"csv","z":"33d7f94784d4d145","name":"Get CSV data","sep":",","hdrin":true,"hdrout":"all","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":620,"y":120,"wires":[["2f9f1cb40d02cb7c","66fbd4c141b977c8"]]},{"id":"2f9f1cb40d02cb7c","type":"debug","z":"33d7f94784d4d145","name":"CSV data","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":820,"y":60,"wires":[]},{"id":"f73bdf68bcdd7599","type":"function","z":"33d7f94784d4d145","name":"Set data","func":"var shift_data = [\n    {\n        \"Supervisor_Name\": msg.payload['Supervisor_Name'],\n        \"Shift_Start\": msg.payload['Shift_Start'],\n        \"Shift_End\": msg.payload['Shift_End'],\n        \"Shift_ID\": msg.payload['Shift_ID'],\n        \"FTE\": msg.payload['FTE'],\n    },\n    {\n        \"Data_Type\": \"Shift_Data\"\n    \n    }   \n]\nmsg.payload = shift_data\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1260,"y":180,"wires":[["51d807a137efc227","360eeb81b3d8c142"]]},{"id":"51d807a137efc227","type":"debug","z":"33d7f94784d4d145","name":"Processed data","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1440,"y":100,"wires":[]},{"id":"cfae29668771b3cf","type":"comment","z":"33d7f94784d4d145","name":"send shift data into influx","info":"","x":170,"y":60,"wires":[]},{"id":"66fbd4c141b977c8","type":"moment","z":"33d7f94784d4d145","name":"Shift_Start_format","topic":"","input":"payload.Shift_Start","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"","locale":"en-GB","output":"payload.Shift_Start","outputType":"msg","outTz":"Europe/London","x":850,"y":180,"wires":[["7df13ef7f29becbe"]]},{"id":"7df13ef7f29becbe","type":"moment","z":"33d7f94784d4d145","name":"Shift_End_format","topic":"","input":"payload.Shift_End","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"","locale":"en-GB","output":"payload.Shift_End","outputType":"msg","outTz":"Europe/London","x":1070,"y":180,"wires":[["f73bdf68bcdd7599"]]},{"id":"360eeb81b3d8c142","type":"link out","z":"33d7f94784d4d145","name":"","links":["461740b4dfa3d1d5","1ed1794e73e191ca"],"x":1375,"y":240,"wires":[]},{"id":"9d5eaee840df6743","type":"ui_form","z":"2f77559e659d4c84","name":"","label":"","group":"34f7757a5faed4d6","order":0,"width":0,"height":0,"options":[{"label":"Brown Sugar","value":"Brown Sugar","type":"number","required":false,"rows":null},{"label":"Candy Sugar","value":"Candy Sugar","type":"number","required":false,"rows":null},{"label":"Icing Sugar","value":"Icing Sugar","type":"number","required":false,"rows":null},{"label":"Caster","value":"Caster","type":"number","required":false,"rows":null},{"label":"Granulated","value":"Granulated","type":"number","required":false,"rows":null},{"label":"Demerara","value":"Demerara","type":"number","required":false,"rows":null},{"label":"Inverted","value":"Inverted","type":"number","required":false,"rows":null},{"label":"Cane","value":"Cane","type":"number","required":false,"rows":null},{"label":"Factory CPH","value":"Factory CPH","type":"number","required":false,"rows":null},{"label":"Pre-heater CPH","value":"Pre-heater CPH","type":"number","required":false,"rows":null},{"label":"Reactor CPH","value":"Reactor CPH","type":"number","required":false,"rows":null},{"label":"Pump CPH","value":"Pump CPH","type":"text","required":false,"rows":null},{"label":"Labour CPH","value":"Labour CPH","type":"number","required":false,"rows":null},{"label":"Lemon Juice (ml)","value":"Lemon Juice (ml)","type":"number","required":false,"rows":null},{"label":"Lime Juice (ml)","value":"Lime Juice (ml)","type":"number","required":false,"rows":null},{"label":"Orange Juice (ml)","value":"Orange Juice (ml)","type":"number","required":false,"rows":null}],"formValue":{"Brown Sugar":"","Candy Sugar":"","Icing Sugar":"","Caster":"","Granulated":"","Demerara":"","Inverted":"","Cane":"","Factory CPH":"","Pre-heater CPH":"","Reactor CPH":"","Pump CPH":"","Labour CPH":"","Lemon Juice (ml)":"","Lime Juice (ml)":"","Orange Juice (ml)":""},"payload":"","submit":"submit","cancel":"cancel","topic":"","topicType":"str","splitLayout":false,"x":510,"y":240,"wires":[["d643352c1ac0e55f"]]},{"id":"d643352c1ac0e55f","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    White_Sugar: msg.payload[\"White Sugar\"],\n    Brown_Sugar: msg.payload[\"Brown Sugar\"],\n    Candy_Sugar: msg.payload[\"Candy Sugar\"],\n    Icing_Sugar: msg.payload[\"Icing Sugar\"],\n    Caster: msg.payload.Caster,\n    Granulated: msg.payload.Granulated,\n    Demerara: msg.payload.Demerara,\n    Inverted: msg.payload.Inverted,\n    Cane: msg.payload.Cane,\n    \n    Factory_CPH: msg.payload[\"Factory CPH\"],\n    Pre_Heater_CPH: msg.payload[\"Pre-heater CPH\"],\n    Reactor_CPH: msg.payload[\"Reactor CPH\"],\n    Labour_CPH: msg.payload[\"Labour CPH\"],\n    Pump_CPH: msg.payload[\"Pump CPH\"],\n    \n    Lemon_Juice_ml: msg.payload[\"Lemon Juice (ml)\"],\n    Lime_Juice_ml: msg.payload[\"Lime Juice (ml)\"],\n    Orange_Juice_ml: msg.payload[\"Orange Juice (ml)\"],\n\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Cost_Data\"\n//    GarbageTag : \"Static Tag\"\n}];\n\nmsg.measurement = flow.get(\"_measurement\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":240,"wires":[["0640a685b88d12b9","b40058706a98616a"]]},{"id":"40b1428502c9d472","type":"ui_form","z":"2f77559e659d4c84","name":"","label":"Batch Details","group":"43d9ab7f5b004a50","order":7,"width":0,"height":0,"options":[{"label":"Sugar amount","value":"Sugar amount (g)","type":"number","required":true,"rows":null},{"label":"Number of labourers","value":"Number of labourers","type":"number","required":true,"rows":null},{"label":"Lemon Juice (ml)","value":"Lemon Juice (ml)","type":"number","required":true,"rows":null},{"label":"Lime Juice (ml)","value":"Lime Juice (ml)","type":"number","required":false,"rows":null},{"label":"Orange Juice (ml)","value":"Orange Juice (ml)","type":"number","required":false,"rows":null}],"formValue":{"Sugar amount (g)":"","Number of labourers":"","Lemon Juice (ml)":"","Lime Juice (ml)":"","Orange Juice (ml)":""},"payload":"","submit":"submit","cancel":"cancel","topic":"Ingredients","topicType":"str","splitLayout":false,"x":530,"y":360,"wires":[["d6d172c1be7e2ed5"]]},{"id":"db8b8667e360ed16","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Product_Type: msg.payload[\"Product Type\"],\n    // White_Sugar: msg.payload.Ingredients[\"White Sugar\"],\n    // Brown_Sugar: msg.payload.Ingredients[\"Brown Sugar\"],\n    // Candy_Sugar: msg.payload.Ingredients[\"Candy Sugar\"],\n    // Icing_Sugar: msg.payload.Ingredients[\"Icing Sugar\"],\n    // Caster: msg.payload.Ingredients.Caster,\n    // Granulated: msg.payload.Ingredients.Granulated,\n    // Demerara: msg.payload.Ingredients.Demerara,\n    // Inverted: msg.payload.Ingredients.Inverted,\n    // Cane: msg.payload.Ingredients.Cane,\n    Sugar_type: msg.payload[\"Sugar Type\"],\n    Labour: msg.payload.Ingredients[\"Number of labourers\"],\n    Lemon_Juice_ml: msg.payload.Ingredients[\"Lemon Juice (ml)\"],\n    Lime_Juice_ml: msg.payload.Ingredients[\"Lime Juice (ml)\"],\n    Orange_Juice_ml: msg.payload.Ingredients[\"Orange Juice (ml)\"],\n    Batch_ID: msg.payload.Batch_ID\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_Materials_Data\",\n      \n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":360,"wires":[["7dbd9de374bee596"]]},{"id":"e0683a87aecee003","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Product Type","tooltip":"","place":"Product Type","group":"43d9ab7f5b004a50","order":4,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"Product Type","topicType":"str","x":1190,"y":520,"wires":[["1bdc60397437fec1"]]},{"id":"1bdc60397437fec1","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":360,"wires":[["db8b8667e360ed16"]]},{"id":"1e1ac9a678ba0f45","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = {\n\"Sugar amount(g)\":400,\n\"Lemon Juice (ml)\":250,\n\"Lime Juice (ml)\":0,\n\"Orange Juice (ml)\":0,\n\n\n\n\n\"Number of labourers\":5,\n\n    \n    };\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":360,"wires":[["40b1428502c9d472"]]},{"id":"10e564ce657a7b56","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"43d9ab7f5b004a50","order":8,"width":0,"height":0,"passthru":false,"label":"Set Defaults","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":90,"y":360,"wires":[["1e1ac9a678ba0f45"]]},{"id":"37f86bb516b13172","type":"link out","z":"2f77559e659d4c84","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5","c5218fbb.92533","1ed1794e73e191ca"],"x":1295,"y":360,"wires":[]},{"id":"0640a685b88d12b9","type":"link out","z":"2f77559e659d4c84","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5","c5218fbb.92533","1ed1794e73e191ca"],"x":1295,"y":240,"wires":[]},{"id":"35b8f5dbc6e0941c","type":"comment","z":"2f77559e659d4c84","name":"Cost Flow","info":"","x":80,"y":200,"wires":[]},{"id":"d5e13d68a4cb08da","type":"comment","z":"2f77559e659d4c84","name":"Batch Materials Flow","info":"","x":110,"y":320,"wires":[]},{"id":"251f927dbcd95e64","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payloadType":"date","x":210,"y":480,"wires":[["a625b7cb3d3026c8"]]},{"id":"872d1e6b53b6eba9","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Batch ID","tooltip":"","place":"Select option","group":"43d9ab7f5b004a50","order":5,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"Batch_ID","topicType":"str","x":1360,"y":720,"wires":[["1bdc60397437fec1"]]},{"id":"55dbf7561146a13a","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payloadType":"date","x":210,"y":660,"wires":[["9da3083d7e774b7c"]]},{"id":"9da3083d7e774b7c","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"43d9ab7f5b004a50","order":2,"width":0,"height":0,"passthru":true,"label":"Retrieve Batch IDs","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"Retrieve_BID","topicType":"str","x":210,"y":720,"wires":[["50b60ec03399a64a"]]},{"id":"7f23c6f74e3dc566","type":"subflow:6b12705d.3289f","z":"2f77559e659d4c84","name":"","env":[],"x":1130,"y":720,"wires":[["872d1e6b53b6eba9","d86f173a7b0d3d57"]]},{"id":"7dbd9de374bee596","type":"debug","z":"2f77559e659d4c84","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1330,"y":300,"wires":[]},{"id":"d6d172c1be7e2ed5","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":360,"wires":[["1bdc60397437fec1"]]},{"id":"7c640a034cf7cd68","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = {\n\"White Sugar\":1/1000,\n\"Brown Sugar\":1.35/1000,\n\"Candy Sugar\":4.8/1000,\n\"Icing Sugar\":1.8/1000,\n\"Caster\":1.1/1000,\n\"Granulated\":1/1000,\n\"Demerara\":1.45/1000,\n\"Inverted\":10/1000,\n\"Cane\":0.8/1000,\n\"Lemon Juice (ml)\":1.2/100,\n\"Lime Juice (ml)\":1.8/100,\n\"Orange Juice (ml)\":0.8/100,\n\n\"Factory CPH\": 125,\n\"Pre-heater CPH\": 9.35,\n\"Reactor CPH\": 11.5,\n\n\"Labour CPH\":25.25,\n\n\"Pump CPH\":(100 / (365*24*5))+ (12*3*0.3/1000),\n\n    };\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":240,"wires":[["9d5eaee840df6743"]]},{"id":"b44b8da93cae97ce","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"34f7757a5faed4d6","order":5,"width":0,"height":0,"passthru":false,"label":"Set Defaults","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":90,"y":240,"wires":[["7c640a034cf7cd68"]]},{"id":"b40058706a98616a","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1330,"y":180,"wires":[]},{"id":"0bb31d3b9023b8a0","type":"ui_form","z":"2f77559e659d4c84","name":"","label":"QC Data","group":"f11a8c078ddbe740","order":4,"width":0,"height":0,"options":[{"label":"Keg: Manual PH","value":"Manual PH","type":"number","required":false,"rows":null},{"label":"Keg: Manual Brix Value","value":"Manual Brix Value","type":"number","required":false,"rows":null},{"label":"Sugar Syrup Qty","value":"Sugar Syrup","type":"number","required":false,"rows":null},{"label":"Fruit: Manual PH","value":"Fruit PH","type":"number","required":false,"rows":null},{"label":"Sugar Bag: Brix Value","value":"Brix Value of Sugar Bag","type":"number","required":false,"rows":null}],"formValue":{"Manual PH":"","Manual Brix Value":"","Sugar Syrup":"","Fruit PH":"","Brix Value of Sugar Bag":""},"payload":"","submit":"submit","cancel":"cancel","topic":"QC Data","topicType":"str","splitLayout":false,"x":560,"y":1200,"wires":[["f02f0902ede017d6"]]},{"id":"c4e523e05ff605a0","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Manual_PH: msg.payload[\"QC Data\"][\"Manual PH\"],\n    Manual_Brix: msg.payload[\"QC Data\"][\"Manual Brix Value\"],\n    Sugar_Syrup: msg.payload[\"QC Data\"][\"Sugar Syrup\"],\n    Fruit_PH: msg.payload[\"QC Data\"][\"Fruit PH\"],\n    Brix_Sugar_Bag: msg.payload[\"QC Data\"][\"Brix Value of Sugar Bag\"],\n    Batch_ID: msg.payload.Batch_ID\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_QC_Lab_Checks\",\n      \n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":1200,"wires":[["99a7a7745fbc1e2d","12af08ce7ac3c6fe","9ba83d6274286edf"]]},{"id":"2e83e20b7f1c3bba","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":1200,"wires":[["c4e523e05ff605a0"]]},{"id":"f45ca210115ea36f","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = {\n\"QC Approved Bottles Produced\":24,\n//\"Manual PH\": 7\n\n\n    \n    };\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":1200,"wires":[["0bb31d3b9023b8a0"]]},{"id":"132f1fd8c039fb89","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"f11a8c078ddbe740","order":5,"width":0,"height":0,"passthru":false,"label":"Set Defaults","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":130,"y":1200,"wires":[["f45ca210115ea36f"]]},{"id":"12af08ce7ac3c6fe","type":"link out","z":"2f77559e659d4c84","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5","c5218fbb.92533","1ed1794e73e191ca"],"x":1315,"y":1200,"wires":[]},{"id":"482fc4ea671406d8","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Select Batch","tooltip":"","place":"Select option","group":"f11a8c078ddbe740","order":3,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"Batch_ID","topicType":"str","x":1390,"y":900,"wires":[["2e83e20b7f1c3bba"]]},{"id":"f02f0902ede017d6","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":1200,"wires":[["2e83e20b7f1c3bba"]]},{"id":"99a7a7745fbc1e2d","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1330,"y":1140,"wires":[]},{"id":"1fc9d4d1de98ad02","type":"ui_form","z":"2f77559e659d4c84","name":"","label":"Product Revenue Details","group":"3a22c6ce342c7d96","order":0,"width":0,"height":0,"options":[{"label":"Product Name","value":"Product_Name","type":"text","required":true,"rows":null},{"label":"Revenue per Bottle","value":"Revenue_PB","type":"number","required":true,"rows":null},{"label":"Std Batch Size (L)","value":"Std_Batch_Size","type":"number","required":true,"rows":null}],"formValue":{"Product_Name":"","Revenue_PB":"","Std_Batch_Size":""},"payload":"","submit":"submit","cancel":"cancel","topic":"Revenue","x":190,"y":2080,"wires":[["80a000a0fe5c0f9e"]]},{"id":"1d04fcdc04d4ff2d","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Revenue_PB: msg.payload.Revenue.Revenue_PB,\n    Std_Batch_Size: msg.payload.Revenue.Std_Batch_Size\n\n\n\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Revenue_Data\",\n      Product_Family: msg.payload[\"Product_Family\"],\n      Product_Name: msg.payload.Revenue[\"Product_Name\"]\n//    GarbageTag : \"Static Tag\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1070,"y":2040,"wires":[["f899d70356eab054","af5b2bc5ac7a141e"]]},{"id":"f899d70356eab054","type":"link out","z":"2f77559e659d4c84","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5","c5218fbb.92533","1ed1794e73e191ca"],"x":1255,"y":2040,"wires":[]},{"id":"fc10ad954627f3fb","type":"comment","z":"2f77559e659d4c84","name":"Revenue Data Flow","info":"","x":150,"y":1920,"wires":[]},{"id":"af5b2bc5ac7a141e","type":"debug","z":"2f77559e659d4c84","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1280,"y":2000,"wires":[]},{"id":"5c8e779b813a597c","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Product Family","tooltip":"","place":"Product Type","group":"3a22c6ce342c7d96","order":2,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"Cola","value":"Cola","type":"str"},{"label":"Lemonade","value":"Lemonade","type":"str"}],"payload":"","topic":"Product_Family","x":480,"y":1980,"wires":[["51fdb90980c376b5"]]},{"id":"51fdb90980c376b5","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":710,"y":2040,"wires":[["1d04fcdc04d4ff2d","1660c79cf4e4d7a0","15935db3279867c9"]]},{"id":"80a000a0fe5c0f9e","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":470,"y":2080,"wires":[["51fdb90980c376b5","234bf1a5ae6a5a6e"]]},{"id":"1660c79cf4e4d7a0","type":"debug","z":"2f77559e659d4c84","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":990,"y":2100,"wires":[]},{"id":"234bf1a5ae6a5a6e","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":710,"y":2120,"wires":[]},{"id":"15935db3279867c9","type":"change","z":"2f77559e659d4c84","name":"","rules":[],"action":"","property":"","from":"","to":"","reg":false,"x":240,"y":1980,"wires":[["5c8e779b813a597c"]]},{"id":"28e710d59869670f","type":"influxdb in","z":"2f77559e659d4c84","influxdb":"0c1ec41161862665","name":"Retrieve Prod Name","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":720,"y":520,"wires":[["e7bfc4d3534cc664","e406c8ac758461f4"]]},{"id":"e7bfc4d3534cc664","type":"subflow:6b12705d.3289f","z":"2f77559e659d4c84","name":"","env":[],"x":970,"y":520,"wires":[["e0683a87aecee003","3f729806082e0c1d"]]},{"id":"a625b7cb3d3026c8","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"43d9ab7f5b004a50","order":3,"width":0,"height":0,"passthru":true,"label":"Retrieve Product Names","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":230,"y":540,"wires":[["4edc7f016ff4dbad"]]},{"id":"48ecec54ea246c4b","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":420,"wires":[["3fa7f328ab751767"]]},{"id":"a7cd4f78541c6265","type":"link out","z":"2f77559e659d4c84","name":"Return to reset BIDs and Product Names","links":["52b75a4ab7693ed7"],"x":1695,"y":420,"wires":[]},{"id":"52b75a4ab7693ed7","type":"link in","z":"2f77559e659d4c84","name":"Trigger Reset BID and Product Names","links":["a7cd4f78541c6265"],"x":35,"y":620,"wires":[["9da3083d7e774b7c","a625b7cb3d3026c8"]]},{"id":"9ba83d6274286edf","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":1240,"wires":[[]]},{"id":"3fa7f328ab751767","type":"delay","z":"2f77559e659d4c84","name":"","pauseType":"delay","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"x":1570,"y":420,"wires":[["a7cd4f78541c6265"]]},{"id":"4edc7f016ff4dbad","type":"function","z":"2f77559e659d4c84","name":"Setup Query","func":"newMsg={};\n\nnewMsg.query='';\nnewMsg.query += 'from(bucket: \"LongTermBucket\")';\nnewMsg.query += '|> range(start: -365d)';\nnewMsg.query += '|> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\nnewMsg.query += '|> filter(fn: (r) => r[\"Data_Type\"] == \"Revenue_Data\")';\nnewMsg.query += '|> group()';\nnewMsg.query += '|> keep(columns: [\"Product_Name\"])';\nnewMsg.query += '|> unique(column: \"Product_Name\")';\n\n\nnewMsg.payload_key = 'Product_Name';\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":540,"wires":[["28e710d59869670f","815a210fb335374b"]]},{"id":"815a210fb335374b","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":670,"y":580,"wires":[]},{"id":"e406c8ac758461f4","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":580,"wires":[]},{"id":"3f729806082e0c1d","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1170,"y":580,"wires":[]},{"id":"0b9ebe2ab4183ead","type":"function","z":"2f77559e659d4c84","name":"Setup Query","func":"newMsg={};\n\nif (msg.payload.BMD_Switch==true){\n    newMsg.query='';\n    newMsg.query += 'Batch_Materials_Data = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -30d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Batch_Materials_Data\")';\n    newMsg.query += '  |> drop(columns: [\"_start\", \"_stop\"])';\n    newMsg.query += '  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_Time: time(v: r.Batch_ID) }))';\n    \n    newMsg.query += 'Batch_ID = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> duplicate(column: \"_time\", as: \"Batch_Time\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"N\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Switch_Batch_ID = join(tables: {t1:Batch_Materials_Data, t2:Batch_ID}, on: [\"Batch_Time\"], method: \"inner\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"Y\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Result = union(tables: [Batch_ID, Switch_Batch_ID])';\n    newMsg.query += '  |> group(columns: [\"Batch_Time\"], mode:\"by\")';\n    newMsg.query += '  |> last(column: \"Batch_ID_Status\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r.Batch_Time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"Batch_Time\"], desc:true)';\n    newMsg.query += '  |> filter(fn: (r) => r.Batch_ID_Status == \"N\")';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    newMsg.query += '  |> yield(name: \"Result\")';\n    \n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;\n} else {\n    newMsg.query='';\n    newMsg.query += 'from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start:-30d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"_time\"], desc:true)';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n\n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;    \n}\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":660,"wires":[["5ea3b3ef7b701a36","8b15fa2c9fca7287"]]},{"id":"5ea3b3ef7b701a36","type":"influxdb in","z":"2f77559e659d4c84","influxdb":"0c1ec41161862665","name":"Retrieve BIDs w/o Batch_Data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":1030,"y":660,"wires":[["7f23c6f74e3dc566","4892d3937e8d9c48"]]},{"id":"fca91aa784bfbe6f","type":"ui_form","z":"2f77559e659d4c84","name":"","label":"QC_Products1","group":"b03d1b43277bb06f","order":6,"width":0,"height":0,"options":[{"label":"QC Approved Bottles","value":"QC Approved Bottles1","type":"number","required":true,"rows":null},{"label":"Rejected Bottles","value":"Rejected Bottles1","type":"number","required":true,"rows":null}],"formValue":{"QC Approved Bottles1":"","Rejected Bottles1":""},"payload":"","submit":"ok","cancel":"cancel","topic":"QC_Products","topicType":"str","splitLayout":false,"x":520,"y":1700,"wires":[["a16695576b56ce8b"]]},{"id":"737736eb55ed966e","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Bottle Size1","tooltip":"Please fill out this field","place":"Select Option *","group":"b03d1b43277bb06f","order":5,"width":0,"height":0,"passthru":true,"multiple":false,"options":[],"payload":"","topic":"Package_Type1","topicType":"str","x":510,"y":1520,"wires":[["a16695576b56ce8b"]]},{"id":"2accb2d5f9f64599","type":"function","z":"2f77559e659d4c84","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Approved_Bottles: msg.payload[\"QC_Products\"][\"QC Approved Bottles1\"],\n    Rejected_Bottles: msg.payload[\"QC_Products\"][\"Rejected Bottles1\"],\n    // Approved_Bottles2: msg.payload[\"QC_Products\"][\"QC Approved Bottles2\"],\n    // Rejected_Bottles2: msg.payload[\"QC_Products\"][\"rejected Bottles2\"],\n    // Approved_Bottles3: msg.payload[\"QC_Products\"][\"QC Approved Bottles3\"],\n    // Rejected_Bottles3: msg.payload[\"QC_Products\"][\"Rejected Bottles3\"],\n    Package_Type: msg.payload[\"Package_Type1\"],\n    // Package_Type2: msg.payload[\"Package_Type2\"],\n    // Package_Type3: msg.payload[\"Package_Type3\"],\n    Batch_ID: msg.payload.Batch_ID\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_QC_Products\",\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":1640,"wires":[["1428b9a1d3e1d00f","a6fb4b3dab02cf33","70cbfd157d68241e"]]},{"id":"1428b9a1d3e1d00f","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1330,"y":1700,"wires":[]},{"id":"0e0fb6262bc643e2","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"b03d1b43277bb06f","order":3,"width":0,"height":0,"passthru":true,"label":"Retrieve Packaging_Type","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":330,"y":1320,"wires":[["60fb0ad470e2122a"]]},{"id":"60fb0ad470e2122a","type":"function","z":"2f77559e659d4c84","name":"Setup Query","func":"newMsg={};\n\nnewMsg.query='';\n\nnewMsg.query += 'from(bucket: \"LongTermBucket\")';\nnewMsg.query += '  |> range(start:-365d)';\nnewMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Packaging_Data\")';\nnewMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\nnewMsg.query += '  |> pivot(rowKey:[\"Package_Type\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\nnewMsg.query += '  |> keep(columns: [\"Package_Type\"])';\nnewMsg.query += '  |> group()';\nnewMsg.payload_key = 'Package_Type';\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":1320,"wires":[["5107eb7d43084ba4"]]},{"id":"5107eb7d43084ba4","type":"influxdb in","z":"2f77559e659d4c84","influxdb":"0c1ec41161862665","name":"Retrieve Packaging Types","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"gabrielapassaglia1@gmail.com","x":750,"y":1320,"wires":[["acf8eabce6224fa5"]]},{"id":"acf8eabce6224fa5","type":"subflow:6b12705d.3289f","z":"2f77559e659d4c84","name":"","env":[],"x":1030,"y":1320,"wires":[["737736eb55ed966e"]]},{"id":"e8897d3dcb196f24","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Select Batch","tooltip":"","place":"Select option","group":"b03d1b43277bb06f","order":4,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"Batch_ID","topicType":"str","x":490,"y":1640,"wires":[["a16695576b56ce8b"]]},{"id":"332e6d4a2e662342","type":"link out","z":"2f77559e659d4c84","name":"","links":["222f9bd209c9eb2e"],"x":1355,"y":1080,"wires":[]},{"id":"222f9bd209c9eb2e","type":"link in","z":"2f77559e659d4c84","name":"","links":["332e6d4a2e662342"],"x":355,"y":1640,"wires":[["e8897d3dcb196f24"]]},{"id":"a1c5b37226a0ae29","type":"comment","z":"2f77559e659d4c84","name":"QC Lab Checks Data Flow","info":"","x":170,"y":1160,"wires":[]},{"id":"b9c75c2438e99783","type":"comment","z":"2f77559e659d4c84","name":"QC Products Batch Data Flow","info":"","x":180,"y":1280,"wires":[]},{"id":"a16695576b56ce8b","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":850,"y":1640,"wires":[["2accb2d5f9f64599","01e1b131e1e5e558"]]},{"id":"45956cf820ed1220","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":610,"y":1060,"wires":[["914702db3ee000e9"]]},{"id":"914702db3ee000e9","type":"function","z":"2bc3b84e0697379a","name":"Delay to ms","func":"msg.delay=msg.payload.Delay_end*1000;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":1060,"wires":[["ed753e16e79eff9c"]]},{"id":"be81308c9fa8924c","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Rejected_Bottles: msg.CSV.Rejected_Bottles,\n    Approved_Bottles: msg.CSV.Approved_Bottles,\n    Package_Type: msg.CSV.Package_Type,\n    Batch_ID: msg.payload[0].Batch_ID\n\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_QC_Products\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1120.0000114440918,"y":1142.5000457763672,"wires":[["125ddd47a2bcd32b"]]},{"id":"ed753e16e79eff9c","type":"delay","z":"2bc3b84e0697379a","name":"","pauseType":"delayv","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":940,"y":1060,"wires":[["ccf75941600b8320","8e35b999c819d545"]]},{"id":"e71de9c444963ec7","type":"influxdb in","z":"2bc3b84e0697379a","influxdb":"0c1ec41161862665","name":"Retrieve BIDs w/o Batch_Data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":800.0000114440918,"y":1182.5000457763672,"wires":[["be81308c9fa8924c","9470c86535c37913","c8175cd47c0d1b97"]]},{"id":"937c05f1b2a68eb0","type":"function","z":"2bc3b84e0697379a","name":"Setup Query","func":"newMsg={};\n\nnewMsg.query='';\n\nnewMsg.query += 'from(bucket: \"LongTermBucket\")';\nnewMsg.query += '  |> range(start:-7d)';\nnewMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\nnewMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\nnewMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"MFIB0\")'\nnewMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\nnewMsg.query += '  |> sort(columns: [\"_value\"], desc: false)';\nnewMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\nnewMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\nnewMsg.query += '  |> last(column: \"Batch_ID\")';\n\nnewMsg.payload = 'Batch_ID';\nnewMsg.CSV = msg.CSV;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560.0000114440918,"y":1182.5000457763672,"wires":[["e71de9c444963ec7"]]},{"id":"ccf75941600b8320","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"CSV","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360.0000114440918,"y":1182.5000457763672,"wires":[["937c05f1b2a68eb0"]]},{"id":"125ddd47a2bcd32b","type":"link out","z":"2bc3b84e0697379a","name":"Link to Batch QC Upload","links":["f7a59e52e2d2fe2c","ba9106c209a8be71","af6b4af1509ca7c3","66dab2db9f3c2339"],"x":1395,"y":1180,"wires":[]},{"id":"9470c86535c37913","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Inverted: msg.CSV.Inverted,\n    Demerara: msg.CSV.Demerara,\n    White_Sugar: msg.CSV.White_Sugar,\n    Granulated: msg.CSV.Granulated,\n    Lime_Juice_ml: msg.CSV.Lime_Juice_ml,\n    Icing_Sugar: msg.CSV.Icing_Sugar,\n    Brown_Sugar: msg.CSV.Brown_Sugar,\n    Candy_Sugar: msg.CSV.Candy_Sugar,\n    Labour: msg.CSV.Labour,\n    Caster: msg.CSV.Caster,\n    Lemon_Juice_ml: msg.CSV.Lemon_Juice_ml,\n    Product_Type: msg.CSV.Product_Type,\n    Cane: msg.CSV.Cane,\n    Orange_Juice_ml: msg.CSV.Orange_Juice_ml,\n    Batch_ID: msg.payload[0].Batch_ID\n\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_Materials_Data\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":1220,"wires":[["125ddd47a2bcd32b"]]},{"id":"e55d755c8144359d","type":"http request","z":"2bc3b84e0697379a","name":"MFIB Control System Protocols.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1vj0B3TlZvfEpJF8T3vugIembskdp08eP","tls":"","persist":false,"proxy":"","authType":"","x":680,"y":180,"wires":[["d97df53fb0b3d31b"]]},{"id":"4684cb6d8d584d9a","type":"http request","z":"2bc3b84e0697379a","name":"Continuous Log.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1SlAr6L_dcSTfsrdqohFBoSM9BKvUiD7t","tls":"","persist":false,"proxy":"","authType":"","x":410,"y":700,"wires":[["2bdc2cf5ef39b56f"]]},{"id":"6dce8455f18c8508","type":"http request","z":"2bc3b84e0697379a","name":"BatchBottles&Materials.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1bOEp3G1piWUkxzSXSbBwFhtX5c-2bh5Z","tls":"","persist":false,"proxy":"","authType":"","x":420,"y":1060,"wires":[["45956cf820ed1220"]]},{"id":"75bf055ee87bce4a","type":"http request","z":"33d7f94784d4d145","name":" Shift Rota Uploader.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/file/d/1bpGj_SvQ7jFlORGRmc7AinP_472i3-C5/view?usp=sharing","tls":"","persist":false,"proxy":"","authType":"","x":390,"y":120,"wires":[["05bedbf703f595b5"]]},{"id":"8e35b999c819d545","type":"debug","z":"2bc3b84e0697379a","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1110,"y":1060,"wires":[]},{"id":"c6d0b82e71539f17","type":"comment","z":"2bc3b84e0697379a","name":"Batch Data Uploader","info":"","x":388.7499885559082,"y":1001.2499618530273,"wires":[]},{"id":"20e438ae438f3c2c","type":"comment","z":"2bc3b84e0697379a","name":"Continuous Log Data Uploader","info":"","x":450,"y":620,"wires":[]},{"id":"295bb5c47f0cb5b5","type":"comment","z":"2bc3b84e0697379a","name":"Protocols Data Uploader","info":"","x":410,"y":60,"wires":[]},{"id":"ba3f6a028903a4d6","type":"inject","z":"2f77559e659d4c84","name":"","props":[],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payloadType":"str","x":130,"y":1320,"wires":[["0e0fb6262bc643e2"]]},{"id":"a6fb4b3dab02cf33","type":"change","z":"2f77559e659d4c84","name":"Set clear","rules":[{"t":"set","p":"payload","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":1360,"y":1580,"wires":[["737736eb55ed966e","e8897d3dcb196f24"]]},{"id":"775ad8c9cdf7c249","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":780,"wires":[]},{"id":"5e82175a812a0fc1","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":720,"wires":[]},{"id":"f7a59e52e2d2fe2c","type":"link in","z":"d3bbf792b935a55c","name":"MFIB0LT","links":["125ddd47a2bcd32b","0835e5cda9cb9a30","676a56e602227756","5e7e5689d70bac09"],"x":375,"y":720,"wires":[["9e0c25000e311edc"]]},{"id":"9e0c25000e311edc","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB0","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":720,"wires":[["5e82175a812a0fc1"]]},{"id":"68552a1dc2778746","type":"comment","z":"d3bbf792b935a55c","name":"Factory 0 Uploader","info":"","x":450,"y":640,"wires":[]},{"id":"54f00c339f838b34","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"b03d1b43277bb06f","order":2,"width":0,"height":0,"passthru":true,"label":"Retrieve Batch IDs","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":210,"y":1080,"wires":[["942e8f043d6a6a9a"]]},{"id":"73f1a830b6c4664a","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payloadType":"date","x":210,"y":1020,"wires":[["54f00c339f838b34"]]},{"id":"8d45ca144aab5925","type":"ui_table","z":"7ecfa83a7cb9ce03","group":"961d37f5d3a48379","name":"","order":5,"width":"18","height":"12","columns":[],"outputs":1,"cts":true,"x":1090,"y":360,"wires":[["17b5d8ea822ef7df"]]},{"id":"7b97a890bdfce4ca","type":"influxdb in","z":"7ecfa83a7cb9ce03","influxdb":"0c1ec41161862665","name":"scheduling","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":610,"y":140,"wires":[["dfc2550294435c12","3491dc89cadf33b6","fc70df06bc6e0a48"]]},{"id":"3af22d3a23e7b67f","type":"ui_template","z":"7ecfa83a7cb9ce03","group":"4c79740b32773ebd","name":"Confirm Submit","order":4,"width":0,"height":0,"format":"<div ng-init=\"init()\" id=\"popup_dialog\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <span ng-click=\"closeDialog()\" class=\"close\">&times;</span>\n            <h2 class=\"title\">{{payload.title}}</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\n            <div layout=\"column\" layout-align=\"center\" style=\"margin-top: 10px\">\n                \n                     <md-input-container>\n                        <label>Product_Type: {{payload.Product_Type}}</label>\n                      </md-input-container>\n                      \n                      <md-input-container>\n                        <label>Ideal_Start: {{payload.Ideal_Start}}</label>\n                      </md-input-container>\n                      \n                      <md-input-container>\n                        <label>Status: {{payload.Status}}</label>\n                      </md-input-container>\n                      \n                      <md-input-container>\n                        <label>Batch_ID: {{payload.Batch_ID}}</label>\n                      </md-input-container>\n                      \n                      <md-input-container>\n                        <label>Schedule_ID: {{payload.Schedule_ID}}</label>\n                      </md-input-container>\n                \n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"btn_box\">\n                        <md-button class=\"btn\" ng-click=\"confirm()\">\n                            <ng-md-icon icon=\"done\" style=\"color:#fff;\"></ng-md-icon> Confirm Submit\n                        </md-button>\n                    </div>\n    \n                    <div class=\"btn_box\">\n                        <md-button class=\"btn\" ng-click=\"closeDialog()\">\n                            <ng-md-icon icon=\"close\" style=\"color:#fff;\"></ng-md-icon> Cancel\n                        </md-button>\n                    </div>\n                </div>\n            </div> \n          \n        </div> <!--dialog_body-->\n    </div> <!--dialog_content-->\n</div>  <!--dialog-->\n\n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n    position: absolute;\n    background-color: #fff;\n    left: calc(50% - 170px);\n    top: 30px;\n    border-radius: 10px;\n    padding: 0;\n    width: 340px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\nh2.title {\n    margin:10px;\n    font-size: 20px;\n}\n/* Media query for smartphones (to Fix?) */\n@media only screen and (min-device-width : 375px) and (max-device-width : 667px) { \n    .dialog_content {\n    margin-top: 5%;\n    margin-left: 5%;\n}\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top: -300px; opacity: 0} \n    to {top: 0; opacity: 1}\n}\n\n@keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: #03A9F4;\n    border-radius: 10px 10px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n/* Number container */\n.btn_box{\n    margin: 5px;\n}\n\n/* Buttons style */\n.btn {\n    min-height: 40px;\n    min-width: 80px;\n    font-weight: bold;\n    margin: 10px 10px 10px 0px;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #29B6F6;\n    color: #fff;\n}\n\n.btn:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n\n\n</style>\n\n<script>\n\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    scope.payload = \"\";\n    scope.topic = \"\";\n    scope.inited = false;\n    \n    scope.init = function() {\n        scope.userInput = \"\";\n        //Hide the md-panel\n        $('#popup_dialog').parent().parent().css(\"display\", \"none\");\n        dialog = $('#popup_dialog').detach();\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        scope.payload = \"\";\n        scope.topic = \"\";\n        dialog.css(\"display\", \"none\");\n    }\n    \n\n    scope.confirm = function() {\n        console.log(scope.payload);\n        scope.send({topic: scope.payload.topic || scope.topic, payload: scope.payload});\n        scope.closeDialog();\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n                   if(scope.inited){\n                        scope.topic = data.topic;\n                        scope.payload = data.payload;\n                        scope.showDialog();\n                   }\n                   else\n                        scope.inited = true;\n                break;\n                case \"close\": \n                    scope.closeDialog(); \n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","x":720,"y":500,"wires":[["445ba0bcd7c348fc"]]},{"id":"17b5d8ea822ef7df","type":"function","z":"7ecfa83a7cb9ce03","name":"show_popup_dialog","func":"if (msg.topic == \"show\") {\n    return msg;    \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":420,"wires":[["3af22d3a23e7b67f","dd8f4dd5348440a7"]]},{"id":"dd8f4dd5348440a7","type":"debug","z":"7ecfa83a7cb9ce03","name":"table_send_data","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1330,"y":360,"wires":[]},{"id":"6061ce175fc351eb","type":"function","z":"7ecfa83a7cb9ce03","name":"Retrieve_BID_Query","func":"newMsg={};\nif (msg.payload.BatchData_Switch == true) {\n    newMsg.query='';\n    newMsg.query += 'Schedule = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -30d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Schedule\")';\n    newMsg.query += '  |> drop(columns: [\"_start\", \"_stop\"])';\n    newMsg.query += '  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_Time: time(v: r.Batch_ID) }))';\n\n    newMsg.query += 'Batch_ID = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> duplicate(column: \"_time\", as: \"Batch_Time\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"N\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Switch_Batch_ID = join(tables: {t1:Schedule, t2:Batch_ID}, on: [\"Batch_Time\"], method: \"inner\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"Y\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Result = union(tables: [Batch_ID, Switch_Batch_ID])';\n    newMsg.query += '  |> group(columns: [\"Batch_Time\"], mode:\"by\")';\n    newMsg.query += '  |> last(column: \"Batch_ID_Status\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r.Batch_Time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"Batch_Time\"], desc:true)';\n    newMsg.query += '  |> filter(fn: (r) => r.Batch_ID_Status == \"N\")';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    newMsg.query += '  |> yield(name: \"Result\")';\n    \n    return newMsg;\n} else {\n    newMsg.query='';\n    newMsg.query += 'from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start:-365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"_time\"], desc:true)';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    \n    return newMsg;\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":300,"wires":[["20a71f0a278ba185"]]},{"id":"20a71f0a278ba185","type":"influxdb in","z":"7ecfa83a7cb9ce03","influxdb":"0c1ec41161862665","name":"Retrieve BIDs w/o Batch_Data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"gabrielapassaglia1@gmail.com","x":590,"y":300,"wires":[["70e915c7e411e256","83bdec1903440642"]]},{"id":"4e9aaf89151cf8f9","type":"function","z":"7ecfa83a7cb9ce03","name":"table_ui_control","func":"// Get batch ids array\nbatch_ids_array = [];\n\nif (msg.payload.batch_ids != undefined) {\n    msg.payload.batch_ids.forEach(myFunction);\n}\n\nfunction myFunction(item, index) {\n    batch_ids_array[index] = msg.payload.batch_ids[index].Batch_ID;\n} \n\n// if (msg.payload.schedule_data != undefined) {\n//     msg.payload.schedule_data.forEach(scheduleDataFunc);\n// }\n// function scheduleDataFunc(item, index) {\n//     if (item.Schedule_ID == \"\" || item.Schedule_ID == undefined) {\n//         item.Schedule_ID = item.Ideal_Start + \"_\" + index.toString();    \n//     }\n// }\n//Define Table Control\nnewMsg = {};\nnewMsg.payload = msg.payload.schedule_data;\nnewMsg.ui_control =  {\n    \"tabulator\": {\n        \"columns\": [\n            {\n                \"formatterParams\": {\n                    \"target\": \"_blank\"\n                },\n                \"title\": \"Product_Type\",\n                \"field\": \"Product_Type\",\n                \"width\": \"20%\",\n                \"align\": \"center\",\n                \"precision\": 3\n            },\n            {\n                \"formatterParams\": {\n                    \"target\": \"_blank\"\n                },\n                \"title\": \"Ideal_Start\",\n                \"field\": \"Ideal_Start\",\n                \"width\": \"20%\",\n                \"align\": \"center\"\n            },\n            {\n                \"formatterParams\": {\n                    \"target\": \"_blank\"\n                },\n                \"title\": \"Status\",\n                \"field\": \"Status\",\n                \"editor\": \"select\",\n                \"editorParams\": {\n                    \"values\": [\n                        \"Planned\",\n                        \"Cancelled\",\n                        \"Deleted\"\n                    ]\n                },\n                \"width\": \"10%\",\n                \"align\": \"center\"\n            },\n            {\n                \"formatterParams\": {\n                    \"target\": \"_blank\"\n                },\n                \"title\": \"Batch_ID\",\n                \"field\": \"Batch_ID\",\n                \"editor\": \"select\",\n                \"editorParams\": {\n                    \"values\": batch_ids_array\n                },\n                \"width\": \"20%\",\n                \"align\": \"center\"\n            },\n            {\n                \"formatterParams\": {\n                    \"target\": \"_blank\"\n                },\n                \"title\": \"Schedule_ID\",\n                \"field\": \"Schedule_ID\",\n                \"width\": \"20%\",\n                \"align\": \"center\"\n            },\n            {\n                \"title\": \"Confirm\",\n                \"field\": \"_time\",\n                \"formatter\": \"function(cell, formatterParams, onRendered) { return \\\"<button>Confirm</button>\\\";}\",\n                \"width\": \"10%\",\n                \"hozAlign\": \"center\",\n                \"align\": \"center\",\n                \"cellClick\": \"function(e, cell) {var data=cell.getRow().getData(); this.send({topic:\\\"show\\\", payload:{\\\"topic\\\": \\\"schedule_update\\\", \\\"title\\\": \\\"Confirm data\\\", \\\"Product_Type\\\":data.Product_Type, \\\"Ideal_Start\\\":data.Ideal_Start, \\\"Status\\\":data.Status, \\\"Batch_ID\\\":data.Batch_ID, \\\"Schedule_ID\\\":data.Schedule_ID, \\\"_time\\\":data._time }});}\"\n            }\n        ],\n        \"layout\": \"fitColumns\",\n        \"movableColumns\": false,\n        \"groupBy\": \"\"\n    },\n    \"customHeight\": 20\n};\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1280,"y":300,"wires":[["8d45ca144aab5925"]]},{"id":"f161777324d8c4f0","type":"join","z":"7ecfa83a7cb9ce03","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1090,"y":300,"wires":[["4e9aaf89151cf8f9"]]},{"id":"dfc2550294435c12","type":"function","z":"7ecfa83a7cb9ce03","name":"set_topic_schedule_data","func":"msg.topic=\"schedule_data\"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":200,"wires":[["f161777324d8c4f0"]]},{"id":"70e915c7e411e256","type":"function","z":"7ecfa83a7cb9ce03","name":"set_topic_batch_ids","func":"msg.topic=\"batch_ids\"\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":300,"wires":[["f161777324d8c4f0"]]},{"id":"14ddbeed7962fa01","type":"change","z":"7ecfa83a7cb9ce03","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":480,"wires":[["f161777324d8c4f0"]]},{"id":"690322ef1e0f496a","type":"ui_button","z":"7ecfa83a7cb9ce03","name":"","group":"961d37f5d3a48379","order":4,"width":0,"height":0,"passthru":false,"label":"Loading Table","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":100,"y":480,"wires":[["14ddbeed7962fa01"]]},{"id":"488525668f7ba11b","type":"ui_button","z":"7ecfa83a7cb9ce03","name":"","group":"961d37f5d3a48379","order":2,"width":0,"height":0,"passthru":false,"label":"Retrieve Batch IDs","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":110,"y":400,"wires":[["2a9d3b57f90530f8"]]},{"id":"a9295560b71021a6","type":"ui_button","z":"7ecfa83a7cb9ce03","name":"","group":"961d37f5d3a48379","order":3,"width":0,"height":0,"passthru":false,"label":"Retrieve Scheduling Data","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":130,"y":140,"wires":[["6dd4eb34f6d37358"]]},{"id":"445ba0bcd7c348fc","type":"function","z":"7ecfa83a7cb9ce03","name":"set_update_schedule_date","func":"newMsg = {};\nnewMsg.headers = {};\nif (msg.topic == \"schedule_update\") {\n    newMsg.payload = global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Product_Type=\\\"\" + msg.payload.Product_Type + \"\\\" \"+ (new Date(msg.payload._time).getTime()*1000000).toString() + \"\\n\";\n    newMsg.payload += global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Ideal_Start=\\\"\" + msg.payload.Ideal_Start + \"\\\" \"+ (new Date(msg.payload._time).getTime()*1000000).toString() + \"\\n\";\n    newMsg.payload += global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Status=\\\"\" + msg.payload.Status + \"\\\" \"+ (new Date(msg.payload._time).getTime()*1000000).toString() + \"\\n\";\n    if (msg.payload.Batch_ID != undefined) {\n        newMsg.payload += global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Batch_ID=\\\"\" + msg.payload.Batch_ID + \"\\\" \"+ (new Date(msg.payload._time).getTime()*1000000).toString() + \"\\n\";    \n    }\n    newMsg.payload += global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Schedule_ID=\\\"\" + msg.payload.Schedule_ID + \"\\\" \"+ (new Date(msg.payload._time).getTime()*1000000).toString() + \"\\n\";\n}\n\nnewMsg.headers['Authorization'] = 'Token lbyqagBNASppEmfJ-nAkCI-2sEVOkTvwYjfyFBKFW9_sl_M2vqcwmUPL9SGXqI0fQli6RPOXYyBwKdIHBRsW2g=='\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":500,"wires":[["15b34d380b959006"]]},{"id":"15b34d380b959006","type":"http request","z":"7ecfa83a7cb9ce03","name":"","method":"POST","ret":"txt","paytoqs":"ignore","url":"https://eu-central-1-1.aws.cloud2.influxdata.com/api/v2/write/?org=60cd8b7dfddd66d6&bucket=LongTermBucket","tls":"","persist":false,"proxy":"","authType":"","x":1250,"y":500,"wires":[[]]},{"id":"3491dc89cadf33b6","type":"function","z":"7ecfa83a7cb9ce03","name":"set_schedule_ID","func":"payload = [];\nschedule_ids_array = [];\n\nif (msg.payload != undefined) {\n    msg.payload.forEach(checkScheduleIDFunc);\n    msg.payload.forEach(generateScheduleIDFunc);\n}\n\nfunction checkScheduleIDFunc(item, index){\n    if (item.Schedule_ID != \"\" && item.Schedule_ID != undefined) {\n        schedule_ids_array.push(parseInt(item.Schedule_ID.split(\"_\")[1]));\n    }\n}\n\nfunction generateScheduleIDFunc(item, index) {\n    schedule = {};\n    if (item.Schedule_ID == \"\" || item.Schedule_ID == undefined) {\n        schedule['_time'] = item._time;\n        schedule['Schedule_ID'] = item.Ideal_Start + \"_\" + getScheduleID().toString();\n        payload.push(schedule)\n    }\n}\n\nfunction getScheduleID(){\n    max = 0;\n    if (schedule_ids_array.length !== 0) {\n        max = Math.max(...schedule_ids_array);\n    }\n    schedule_ids_array.push(max+1);\n    return max\n}\n\nnewMsg = {};\nnewMsg.headers = {};\nline_protocol = \"\";\nfunction lineProtocolScheduleIDFunc(item, index){\n    line_protocol += global.get(\"_measurement\") + \",Data_Type=Schedule,Asset=Batch Schedule_ID=\\\"\" + item.Schedule_ID + \"\\\" \"+ (new Date(item._time).getTime()*1000000).toString() + \"\\n\";    \n}\nif (payload.length !== 0) {\n    payload.forEach(lineProtocolScheduleIDFunc);\n    newMsg.payload = line_protocol;\n    newMsg.headers['Authorization'] = 'Token qmvYtaPLHH_UU4XrhGs1cv66iuEsX3ZGd5hGFgnsr13IJD1cOz66dxdr7fiF8mz2LhPA4JYqefDPDxiPtQjMXw=='\n    return newMsg;    \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":140,"wires":[["457805afc1c77bfc","747b0237dfb7408b"]]},{"id":"457805afc1c77bfc","type":"http request","z":"7ecfa83a7cb9ce03","name":"","method":"POST","ret":"txt","paytoqs":"ignore","url":"https://eu-central-1-1.aws.cloud2.influxdata.com/api/v2/write/?org=60cd8b7dfddd66d6&bucket=LongTermBucket","tls":"","persist":false,"proxy":"","authType":"","x":1110,"y":140,"wires":[[]]},{"id":"747b0237dfb7408b","type":"debug","z":"7ecfa83a7cb9ce03","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1090,"y":40,"wires":[]},{"id":"fc70df06bc6e0a48","type":"debug","z":"7ecfa83a7cb9ce03","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":790,"y":40,"wires":[]},{"id":"082f717a4a79b757","type":"function","z":"a871183c24f29819","name":"set_uploader_query","func":"var payload = msg.payload;\n\nfunction convert2utciso(datestr, timestr) {\n    var utciso = datestr + \"T\" + timestr + \"Z\"\n    return utciso\n}\n\n// var upload_datetime = convert2utciso(\n//     date_info[\"upload_date\"],date_info[\"upload_time\"]\n// )\n\nvar incident_datetime = convert2utciso(\n    payload[\"incident_date\"], payload[\"incident_time\"]\n)\n\nmsg.payload = [\n    {\n        Incident_Datetime: incident_datetime,\n        Incident_Category: payload[\"Incident_Category\"],\n        Type: payload[\"Type\"],\n        Accident_Details: payload[\"Accident_Details\"]\n    },\n    {\n        Data_Type : \"Safety_Records\"\n    }\n]\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":300,"wires":[["2089569d72c3e87f","6f9929caf97e58e8"]]},{"id":"21dfda847e396f16","type":"ui_dropdown","z":"a871183c24f29819","name":"type","label":"Type","tooltip":"Safety Uploader Type","place":"Select option","group":"1f5be5845c7c7e14","order":5,"width":"0","height":"0","passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"Type","topicType":"str","x":710,"y":240,"wires":[["1bb7ece8918bf7d7"]]},{"id":"d8976006c8298001","type":"ui_text_input","z":"a871183c24f29819","name":"accident_details","label":"Accident Details","tooltip":"Accident details (string, free text box)","group":"1f5be5845c7c7e14","order":6,"width":0,"height":0,"passthru":true,"mode":"text","delay":300,"topic":"Accident_Details","topicType":"str","x":420,"y":360,"wires":[["1bb7ece8918bf7d7"]]},{"id":"45862ed4802717f8","type":"ui_button","z":"a871183c24f29819","name":"upload","group":"1f5be5845c7c7e14","order":7,"width":0,"height":0,"passthru":false,"label":"Upload","tooltip":"","color":"","bgcolor":"","icon":"cloud_upload","payload":"","payloadType":"str","topic":"","topicType":"str","x":250,"y":420,"wires":[["52d4d2801bda5404","50b3861274fc863e"]]},{"id":"1bb7ece8918bf7d7","type":"join","z":"a871183c24f29819","name":"saftey_uploader_data_join","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1000,"y":240,"wires":[["082f717a4a79b757"]]},{"id":"52d4d2801bda5404","type":"change","z":"a871183c24f29819","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":690,"y":420,"wires":[["1bb7ece8918bf7d7"]]},{"id":"2089569d72c3e87f","type":"debug","z":"a871183c24f29819","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1290,"y":280,"wires":[]},{"id":"03c2df4626f3be01","type":"ui_dropdown","z":"a871183c24f29819","name":"incident_category","label":"Incident Category","tooltip":"","place":"Select option","group":"1f5be5845c7c7e14","order":4,"width":"0","height":"0","passthru":true,"multiple":false,"options":[{"label":"Injury","value":"Injury","type":"str"},{"label":"Dangerous Occurrence","value":"Dangerous Occurrence","type":"str"},{"label":"Exclusion Zone","value":"Exclusion Zone","type":"str"},{"label":"Other","value":"Other","type":"str"}],"payload":"","topic":"Incident_Category","topicType":"str","x":430,"y":300,"wires":[["f31298ab45966b01","1bb7ece8918bf7d7"]]},{"id":"f31298ab45966b01","type":"function","z":"a871183c24f29819","name":"Setup Query","func":"key = msg.payload\n    switch(msg.payload) {\n      case \"Injury\":\n        msg.options = [\n            \"Fracture\", \n            \"Amputation\", \n            \"Loss of sight\",\n            \"Crush injury to head or torso\",\n            \"Burn\",\n            \"Scalping\",\n            \"Loss of consciousness\",\n            \"Enclosed space injury\",\n            \"Other\"]\n        break;\n      case \"Dangerous Occurrence\":\n        msg.options = [\n            \"Lifting Equipment\",\n            \"Pressure systems\",\n            \"Electic Lines\",\n            \"Explosion or Fire\",\n            \"Explosives\",\n            \"Biological Agents\",\n            \"Radiation\",\n            \"Breathing Apparatus\",\n            \"Scaffolding\",\n            \"Pipeline failure\",\n            \"Structural collapse\",\n            \"Hazardous Substances\"]\n        break;\n      case \"Exclusion Zone\":\n        msg.options = [\n            \"Exclusion Zone Breach\"]\n        break;\n      case \"Other\":\n        msg.options = [\n            \"Gas incident\",\n            \"Diving Incident\",\n            \"Occupational Disease\",\n            \"Death\",\n            \"Other\"]\n        break;\n      default:\n        break;\n    }\n\nreturn msg","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":240,"wires":[["21dfda847e396f16"]]},{"id":"cb2e1c905b06863a","type":"comment","z":"a871183c24f29819","name":"Safety Uploader Form","info":"","x":140,"y":40,"wires":[]},{"id":"d13769d1a5f01bca","type":"moment","z":"a871183c24f29819","name":"incident_time","topic":"incident_time","input":"","inputType":"date","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"hh:mm:ss.sss","locale":"en-GB","output":"payload","outputType":"msg","outTz":"Europe/Moscow","x":610,"y":180,"wires":[["1bb7ece8918bf7d7"]]},{"id":"6f9929caf97e58e8","type":"link out","z":"a871183c24f29819","name":"","links":["461740b4dfa3d1d5"],"x":1235,"y":320,"wires":[]},{"id":"68a10a5853961aa5","type":"ui_text_input","z":"a871183c24f29819","name":"incident_time","label":"Incident Time","tooltip":"","group":"1f5be5845c7c7e14","order":3,"width":"0","height":"0","passthru":true,"mode":"time","delay":300,"topic":"topic","topicType":"msg","x":410,"y":180,"wires":[["d13769d1a5f01bca"]]},{"id":"885aaa0693dfd41b","type":"ui_date_picker","z":"a871183c24f29819","name":"incident_date","label":"Incident Date","group":"1f5be5845c7c7e14","order":2,"width":"0","height":"0","passthru":true,"topic":"topic","topicType":"msg","x":410,"y":120,"wires":[["1fedc027ecfe0ad4"]]},{"id":"cac1bf2fc4d5bcd2","type":"ui_template","z":"a871183c24f29819","group":"1f5be5845c7c7e14","name":"set-style","order":1,"width":0,"height":0,"format":"<style>\n#Safety_Uploader_Safety_Uploader_cards > md-card > md-input-container > p {\n    min-width: 35%;\n}\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":940,"y":120,"wires":[[]]},{"id":"1fedc027ecfe0ad4","type":"moment","z":"a871183c24f29819","name":"incident_date","topic":"incident_date","input":"","inputType":"date","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"YYYY-MM-DD","locale":"en-GB","output":"payload","outputType":"msg","outTz":"Europe/London","x":610,"y":120,"wires":[["1bb7ece8918bf7d7"]]},{"id":"50b3861274fc863e","type":"change","z":"a871183c24f29819","name":"set","rules":[{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":110,"y":240,"wires":[["640ebaa53aac3a63","68a10a5853961aa5","03c2df4626f3be01","d8976006c8298001"]]},{"id":"640ebaa53aac3a63","type":"function","z":"a871183c24f29819","name":"set_today","func":"msg.payload = new Date();\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":240,"y":120,"wires":[["885aaa0693dfd41b"]]},{"id":"457e483e1c74a21c","type":"ui_text_input","z":"9041effcc0d9d735","name":"name","label":"Name","tooltip":"","group":"7a39981f42617916","order":2,"width":0,"height":0,"passthru":true,"mode":"text","delay":300,"topic":"name","topicType":"str","x":570,"y":120,"wires":[["6a6db194cc5b6cd6"]]},{"id":"5c50bd9fa36638fb","type":"ui_button","z":"9041effcc0d9d735","name":"submit","group":"7a39981f42617916","order":8,"width":0,"height":0,"passthru":false,"label":"Submit","tooltip":"","color":"","bgcolor":"","icon":"star","payload":"","payloadType":"str","topic":"","topicType":"str","x":190,"y":480,"wires":[["c8c9c6b9bcf084e1","198cde05295e5e41"]]},{"id":"c8c9c6b9bcf084e1","type":"change","z":"9041effcc0d9d735","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":550,"y":480,"wires":[["6a6db194cc5b6cd6"]]},{"id":"6a6db194cc5b6cd6","type":"join","z":"9041effcc0d9d735","name":"survey_data_join","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":260,"wires":[["cb9c2aa7540f0b30","680c8db49dd973e2"]]},{"id":"680c8db49dd973e2","type":"function","z":"9041effcc0d9d735","name":"set_survey_data","func":"msg.payload = [\n    {\n        Name: msg.payload[\"name\"],\n        feeling: msg.payload[\"feeling\"],\n        leadership: msg.payload[\"leadership\"],\n        workload: msg.payload[\"workload\"],\n        feel_value: msg.payload[\"feel_value\"],\n        expectation: msg.payload[\"expectation\"]\n    },\n    {\n        Data_Type: \"Team_Survey\"\n    }\n]\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":260,"wires":[["2869fe559b49f239","fd3c8469d6144c20"]]},{"id":"cb9c2aa7540f0b30","type":"debug","z":"9041effcc0d9d735","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1120,"y":200,"wires":[]},{"id":"2869fe559b49f239","type":"debug","z":"9041effcc0d9d735","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1350,"y":200,"wires":[]},{"id":"d572605442e3e77e","type":"ui_slider","z":"9041effcc0d9d735","name":"feeling","label":"Overall Feeling","tooltip":"Overall how are you feeling?","group":"7a39981f42617916","order":3,"width":0,"height":0,"passthru":true,"outs":"end","topic":"feeling","topicType":"str","min":"1","max":"5","step":1,"x":570,"y":180,"wires":[["6a6db194cc5b6cd6"]]},{"id":"ad5d2528246a56b3","type":"ui_slider","z":"9041effcc0d9d735","name":"leadership","label":"   Leadership    ","tooltip":"Leadership creates a constructive working atmosphere","group":"7a39981f42617916","order":4,"width":0,"height":0,"passthru":true,"outs":"end","topic":"leadership","topicType":"str","min":"1","max":"5","step":1,"x":590,"y":240,"wires":[["6a6db194cc5b6cd6"]]},{"id":"6370915d50a184b1","type":"ui_slider","z":"9041effcc0d9d735","name":"workload","label":"Workload","tooltip":"The workload is sustainable","group":"7a39981f42617916","order":5,"width":0,"height":0,"passthru":true,"outs":"end","topic":"workload","topicType":"str","min":"1","max":"5","step":1,"x":580,"y":300,"wires":[["6a6db194cc5b6cd6"]]},{"id":"20e47b14183ca77d","type":"ui_slider","z":"9041effcc0d9d735","name":"feel_value","label":"Feel Valued","tooltip":"I feel valued at work","group":"7a39981f42617916","order":6,"width":0,"height":0,"passthru":true,"outs":"end","topic":"feel_value","topicType":"str","min":"1","max":"5","step":1,"x":590,"y":360,"wires":[["6a6db194cc5b6cd6"]]},{"id":"e79a81eb3ff03f76","type":"ui_slider","z":"9041effcc0d9d735","name":"expectation","label":"Expectation","tooltip":"I know what is expected of me at work","group":"7a39981f42617916","order":7,"width":0,"height":0,"passthru":true,"outs":"end","topic":"expectation","topicType":"str","min":"1","max":"5","step":1,"x":590,"y":420,"wires":[["6a6db194cc5b6cd6"]]},{"id":"fd3c8469d6144c20","type":"link out","z":"9041effcc0d9d735","name":"","links":["461740b4dfa3d1d5","3dc037e5a7799c15"],"x":1355,"y":260,"wires":[]},{"id":"9d341f52b7d86c01","type":"ui_template","z":"9041effcc0d9d735","group":"7a39981f42617916","name":"slider_line_up","order":1,"width":0,"height":0,"format":"<style>\n#Team_Satisfaction_Survey_Survey_cards > md-card > p {\n    min-width: 35%;\n }\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":840,"y":120,"wires":[[]]},{"id":"198cde05295e5e41","type":"change","z":"9041effcc0d9d735","name":"Set","rules":[{"t":"set","p":"payload","pt":"msg","to":"[1,1,1,1,1]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":280,"wires":[["d572605442e3e77e","ad5d2528246a56b3","6370915d50a184b1","20e47b14183ca77d","e79a81eb3ff03f76"]]},{"id":"6dd4eb34f6d37358","type":"function","z":"7ecfa83a7cb9ce03","name":"Retrive_SD_Query","func":"newMsg={};\n\nnewMsg.query='';\n\nnewMsg.query += 'from(bucket: \"LongTermBucket\")';\nnewMsg.query += '  |> range(start: -30d)';\nnewMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Schedule\")';\nnewMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\nnewMsg.query += '  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":140,"wires":[["7b97a890bdfce4ca"]]},{"id":"1ae8a95d7d21d3b6","type":"ui_switch","z":"7ecfa83a7cb9ce03","name":"BatchData_Switch","label":"Show only new Batches","tooltip":"","group":"961d37f5d3a48379","order":1,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":110,"y":200,"wires":[["7d53881ddf8f73be"]]},{"id":"4c37bf5321277495","type":"ui_switch","z":"2f77559e659d4c84","name":"BatchData_Switch","label":"Show only new Batches","tooltip":"","group":"43d9ab7f5b004a50","order":1,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":210,"y":600,"wires":[["0441ed949cef3857"]]},{"id":"eea85fad0d1f2f55","type":"ui_switch","z":"2f77559e659d4c84","name":"QCPData_Switch","label":"Show only new Batches","tooltip":"","group":"b03d1b43277bb06f","order":1,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":210,"y":960,"wires":[["73648616704e3590"]]},{"id":"2a9d3b57f90530f8","type":"change","z":"7ecfa83a7cb9ce03","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":400,"wires":[["534def08e0f4ea24"]]},{"id":"534def08e0f4ea24","type":"join","z":"7ecfa83a7cb9ce03","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":110,"y":300,"wires":[["6061ce175fc351eb"]]},{"id":"83bdec1903440642","type":"debug","z":"7ecfa83a7cb9ce03","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":240,"wires":[]},{"id":"7d53881ddf8f73be","type":"function","z":"7ecfa83a7cb9ce03","name":"set_msg_topic","func":"msg.topic=\"BatchData_Switch\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":200,"wires":[["534def08e0f4ea24"]]},{"id":"465c2961cd563726","type":"function","z":"2f77559e659d4c84","name":"Setup_Query","func":"newMsg={};\nif (msg.payload.QCPD_Switch==true){\n    newMsg.query='';\n    newMsg.query += 'Batch_QC_Products = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -30d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Batch_QC_Products\")';\n    newMsg.query += '  |> drop(columns: [\"_start\", \"_stop\"])';\n    newMsg.query += '  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_Time: time(v: r.Batch_ID) }))';\n\n    newMsg.query += 'Batch_ID = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> duplicate(column: \"_time\", as: \"Batch_Time\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"N\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Switch_Batch_ID = join(tables: {t1:Batch_QC_Products, t2:Batch_ID}, on: [\"Batch_Time\"], method: \"inner\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"Y\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Result = union(tables: [Batch_ID, Switch_Batch_ID])';\n    newMsg.query += '  |> group(columns: [\"Batch_Time\"], mode:\"by\")';\n    newMsg.query += '  |> last(column: \"Batch_ID_Status\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r.Batch_Time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"Batch_Time\"], desc:true)';\n    newMsg.query += '  |> filter(fn: (r) => r.Batch_ID_Status == \"N\")';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    newMsg.query += '  |> yield(name: \"Result\")';\n    \n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;\n} else {\n    newMsg.query='';\n    newMsg.query += 'from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start:-365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"_time\"], desc:true)';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    \n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":1020,"wires":[["ca4d60bcfbd48f6f"]]},{"id":"6d8974cb7b71dedb","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":590,"y":660,"wires":[["0b9ebe2ab4183ead"]]},{"id":"50b60ec03399a64a","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":430,"y":720,"wires":[["6d8974cb7b71dedb"]]},{"id":"0441ed949cef3857","type":"function","z":"2f77559e659d4c84","name":"set_msg_topic","func":"msg.topic=\"BMD_Switch\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":600,"wires":[["6d8974cb7b71dedb"]]},{"id":"942e8f043d6a6a9a","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":430,"y":1080,"wires":[["e5043e4e5543fb62"]]},{"id":"73648616704e3590","type":"function","z":"2f77559e659d4c84","name":"set_msg_topic","func":"msg.topic=\"QCPD_Switch\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":960,"wires":[["e5043e4e5543fb62"]]},{"id":"e5043e4e5543fb62","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":610,"y":1020,"wires":[["465c2961cd563726"]]},{"id":"adb4ebafe2e72a38","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"f11a8c078ddbe740","order":2,"width":0,"height":0,"passthru":true,"label":"Retrieve Batch IDs","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":210,"y":900,"wires":[["0cf97101bb980faf"]]},{"id":"de9477337f022aa6","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payloadType":"date","x":210,"y":840,"wires":[["adb4ebafe2e72a38"]]},{"id":"7a3146ec352da94e","type":"ui_switch","z":"2f77559e659d4c84","name":"QCLData_Switch","label":"Show only new Batches","tooltip":"","group":"f11a8c078ddbe740","order":1,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":210,"y":780,"wires":[["a73c540d9658d03d"]]},{"id":"76908a5fd803368a","type":"function","z":"2f77559e659d4c84","name":"Setup_Query","func":"newMsg={};\nif (msg.payload.QCLD_Switch==true){\n    newMsg.query='';\n    newMsg.query += 'Batch_QC_Lab_Checks = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -30d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"Batch_QC_Lab_Checks\")';\n    newMsg.query += '  |> drop(columns: [\"_start\", \"_stop\"])';\n    newMsg.query += '  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_Time: time(v: r.Batch_ID) }))';\n\n    newMsg.query += 'Batch_ID = from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start: -365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> duplicate(column: \"_time\", as: \"Batch_Time\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"N\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Switch_Batch_ID = join(tables: {t1:Batch_QC_Lab_Checks, t2:Batch_ID}, on: [\"Batch_Time\"], method: \"inner\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID_Status: \"Y\" }))';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID_Status\", \"Batch_Time\"])';\n\n    newMsg.query += 'Result = union(tables: [Batch_ID, Switch_Batch_ID])';\n    newMsg.query += '  |> group(columns: [\"Batch_Time\"], mode:\"by\")';\n    newMsg.query += '  |> last(column: \"Batch_ID_Status\")';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r.Batch_Time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"Batch_Time\"], desc:true)';\n    newMsg.query += '  |> filter(fn: (r) => r.Batch_ID_Status == \"N\")';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    newMsg.query += '  |> yield(name: \"Result\")';\n    \n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;\n} else {\n    newMsg.query='';\n    newMsg.query += 'from(bucket: \"LongTermBucket\")';\n    newMsg.query += '  |> range(start:-365d)';\n    newMsg.query += '  |> filter(fn: (r) => r[\"Data_Type\"] == \"ProtocolStateChanges\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_field\"] == \"Protocol_Name\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_measurement\"] == \"'+ global.get(\"_measurement\") + '\")';\n    newMsg.query += '  |> filter(fn: (r) => r[\"_value\"] =~ /Fill.*Reactor.*Heater/)';\n    newMsg.query += '  |> map(fn: (r) => ({ r with Batch_ID: string(v: r._time) }))';\n    newMsg.query += '  |> group()';\n    newMsg.query += '  |> sort(columns: [\"_time\"], desc:true)';\n    newMsg.query += '  |> keep(columns: [\"Batch_ID\"])';\n    \n    newMsg.payload_key=\"Batch_ID\";\n    return newMsg;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":840,"wires":[["9d1e50ce37538b0b"]]},{"id":"0cf97101bb980faf","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":430,"y":900,"wires":[["59ef97f1d50ee41f"]]},{"id":"a73c540d9658d03d","type":"function","z":"2f77559e659d4c84","name":"set_msg_topic","func":"msg.topic=\"QCLD_Switch\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":780,"wires":[["59ef97f1d50ee41f"]]},{"id":"59ef97f1d50ee41f","type":"join","z":"2f77559e659d4c84","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":610,"y":840,"wires":[["76908a5fd803368a"]]},{"id":"9d1e50ce37538b0b","type":"influxdb in","z":"2f77559e659d4c84","influxdb":"0c1ec41161862665","name":"Retrieve BIDs w/o Batch_Data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":1030,"y":840,"wires":[["1a1ab0a5c72f3a2f"]]},{"id":"1a1ab0a5c72f3a2f","type":"subflow:6b12705d.3289f","z":"2f77559e659d4c84","name":"","env":[],"x":1130,"y":900,"wires":[["482fc4ea671406d8","23773d9587416472"]]},{"id":"ca4d60bcfbd48f6f","type":"influxdb in","z":"2f77559e659d4c84","influxdb":"0c1ec41161862665","name":"Retrieve BIDs w/o Batch_Data","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"60cd8b7dfddd66d6","x":1030,"y":1020,"wires":[["fd98d3b6e0b1e042"]]},{"id":"fd98d3b6e0b1e042","type":"subflow:6b12705d.3289f","z":"2f77559e659d4c84","name":"","env":[],"x":1130,"y":1080,"wires":[["332e6d4a2e662342"]]},{"id":"4892d3937e8d9c48","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1280,"y":660,"wires":[]},{"id":"d86f173a7b0d3d57","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1340,"y":800,"wires":[]},{"id":"8b15fa2c9fca7287","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"query","targetType":"msg","statusVal":"","statusType":"auto","x":880,"y":740,"wires":[]},{"id":"7290e45666123472","type":"comment","z":"2bc3b84e0697379a","name":"One-Shots Uploader","info":"","x":350,"y":1380,"wires":[]},{"id":"5cf0638539848ce8","type":"http request","z":"2bc3b84e0697379a","name":"CostRevenue.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=19Xj0hb8CMGo09QceWG1CaPxUfOFGunDa","tls":"","persist":false,"proxy":"","authType":"","x":351.2500114440918,"y":1438.7500381469727,"wires":[["a7ba2a41346a36cf"]]},{"id":"a7ba2a41346a36cf","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":550,"y":1440,"wires":[["7b1e3a0c640d72ef"]]},{"id":"7b1e3a0c640d72ef","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":1440,"wires":[["aee60100b30692a6","373d283d3819761c"]]},{"id":"aee60100b30692a6","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Lime_Juice_ml: msg.payload.Lime_Juice_ml,\n    White_Sugar: msg.payload.White_Sugar,\n    Demerara: msg.payload.Demerara,\n    Pump_CPH: msg.payload.Pump_CPH,\n    Labour_CPH: msg.payload.Labour_CPH,\n    Inverted: msg.payload.Inverted,\n    Granulated: msg.payload.Granulated,\n    Cane: msg.payload.Cane,\n    Brown_Sugar: msg.payload.Brown_Sugar,\n    Orange_Juice_ml: msg.payload.Orange_Juice_ml,\n    Factory_CPH: msg.payload.Factory_CPH,\n    Icing_Sugar: msg.payload.Icing_Sugar,\n    Pre_Heater_CPH: msg.payload.Pre_Heater_CPH,\n    Caster: msg.payload.Caster,\n    Candy_Sugar: msg.payload.Candy_Sugar,\n    Lemon_Juice_ml: msg.payload.Lemon_Juice_ml,\n    Reactor_CPH: msg.payload.Reactor_CPH\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Cost_Data\"\n//    GarbageTag : \"Static Tag\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1380,"wires":[["5e7e5689d70bac09"]]},{"id":"373d283d3819761c","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Revenue_PB: msg.payload.Revenue_PB,\n    Std_Batch_Size: msg.payload.Std_Batch_Size,\n},\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Revenue_Data\",\n    Product_Family: \"Lemonade\",\n    Product_Name: \"Normal Lemonade\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1440,"wires":[["5e7e5689d70bac09"]]},{"id":"9088e08ef5df56f5","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nvar dict_data = {}\ndict_data[msg.payload._field] = msg.payload._value;\nmsg.payload = [\n    dict_data,\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Control_Limits\",\n    Limit_Type: msg.payload.Limit_Type\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1500,"wires":[["5e7e5689d70bac09"]]},{"id":"84c75329eedff594","type":"http request","z":"2bc3b84e0697379a","name":"Control_Limits.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1aSNvbk3JBiTUGagj3PoQz0DzMmZ-jnfb","tls":"","persist":false,"proxy":"","authType":"","x":350,"y":1500,"wires":[["d138d30a081fc127"]]},{"id":"d138d30a081fc127","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":548.7499885559082,"y":1501.2499618530273,"wires":[["092c6b33c2296756"]]},{"id":"092c6b33c2296756","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":728.7499885559082,"y":1501.2499618530273,"wires":[["9088e08ef5df56f5"]]},{"id":"5d205da51b0bd2d0","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nvar dict_data = {};\ndict_data[msg.payload._field] = msg.payload._value;\nmsg.payload = [\n    dict_data,\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Standard_Times\",\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1560,"wires":[["5e7e5689d70bac09"]]},{"id":"edf20557a50b76ea","type":"http request","z":"2bc3b84e0697379a","name":"Standard_Times.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1tf0Kx4vH5BrX_EWhLnTArbWY2-yVmV9N","tls":"","persist":false,"proxy":"","authType":"","x":360,"y":1560,"wires":[["8b3011a5b3b0e771"]]},{"id":"8b3011a5b3b0e771","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":548.7499885559082,"y":1561.2499618530273,"wires":[["8072037b3c0ff1a7"]]},{"id":"8072037b3c0ff1a7","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":728.7499885559082,"y":1561.2499618530273,"wires":[["5d205da51b0bd2d0"]]},{"id":"07a8d080255c03b5","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"var dict_data = {};\ndict_data[msg.payload._field] = msg.payload._value;\n\nmsg.payload = [\n    dict_data,\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Packaging_Data\",\n    Package_Type: msg.payload.Package_Type\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1620,"wires":[["5e7e5689d70bac09"]]},{"id":"94ca98994a22d735","type":"http request","z":"2bc3b84e0697379a","name":"Packaging_Data.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1cUYawv4Ap9kzx7xv8PhewMquIwZQHtjY","tls":"","persist":false,"proxy":"","authType":"","x":360,"y":1620,"wires":[["6a3fe9f47fadc3db"]]},{"id":"6a3fe9f47fadc3db","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":548.7499885559082,"y":1621.2499618530273,"wires":[["f8075116e9f9aa1e"]]},{"id":"f8075116e9f9aa1e","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":728.7499885559082,"y":1621.2499618530273,"wires":[["07a8d080255c03b5"]]},{"id":"d47582a5ec79d87c","type":"inject","z":"2bc3b84e0697379a","name":"Daily Inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"86400","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":100,"y":1540,"wires":[["94ca98994a22d735","5cf0638539848ce8","84c75329eedff594","edf20557a50b76ea","31b4c82ee2ef5126"]]},{"id":"5e7e5689d70bac09","type":"link out","z":"2bc3b84e0697379a","name":"DataSourceUpdater","links":["322c4fe43670c7df","66dab2db9f3c2339","9bfb5769cd51451f","af6b4af1509ca7c3","ba9106c209a8be71","f35e5811254dfb36","f7a59e52e2d2fe2c"],"x":1235,"y":1520,"wires":[]},{"id":"7ee27c35f198586e","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":1160,"wires":[]},{"id":"3982bc27196d9155","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":1100,"wires":[]},{"id":"9bfb5769cd51451f","type":"link in","z":"d3bbf792b935a55c","name":"MFIB105LT","links":["35c3e58586251751","ceab5fcb1838dfa1","5e7e5689d70bac09"],"x":375,"y":1100,"wires":[["bb5f1f3d566e0569"]]},{"id":"bb5f1f3d566e0569","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB105","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":1100,"wires":[["3982bc27196d9155"]]},{"id":"8ad6c8c7ba391a7f","type":"comment","z":"d3bbf792b935a55c","name":"Factory 105 Uploader","info":"","x":460,"y":1020,"wires":[]},{"id":"c0e535043066a8b1","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"var dict_data = {};\ndict_data[msg.payload._field] = msg.payload._value;\nmsg.payload = [\n    dict_data,\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Safety_Records\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":1680,"wires":[["5e7e5689d70bac09"]]},{"id":"31b4c82ee2ef5126","type":"http request","z":"2bc3b84e0697379a","name":"Safety_Data.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1UONVgcjUtEHwJfAerC7f_goIKBDOs3SF","tls":"","persist":false,"proxy":"","authType":"","x":340,"y":1680,"wires":[["b67e9ca59a20cd14"]]},{"id":"b67e9ca59a20cd14","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":548.7499885559082,"y":1681.2499618530273,"wires":[["fc0e4dc16e55c1ea"]]},{"id":"fc0e4dc16e55c1ea","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":728.7499885559082,"y":1681.2499618530273,"wires":[["c0e535043066a8b1"]]},{"id":"3f9f8a5f61fc2075","type":"inject","z":"2bc3b84e0697379a","name":"Hourly Inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3600","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":120,"y":1680,"wires":[["a7f071b410c568a9"]]},{"id":"204272d65a207efa","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"var dict_data = {};\ndict_data[msg.payload._field] = msg.payload.random\nmsg.payload = [\n    dict_data,\n{\n//Tags, Tag Name on left, tag value on right\n    Data_Type: \"Team_Survey\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":1740,"wires":[["5e7e5689d70bac09"]]},{"id":"a7f071b410c568a9","type":"http request","z":"2bc3b84e0697379a","name":"Team_Survey.csv","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://drive.google.com/uc?export=download&id=1thjvD6XLAC9v9-WYMQbVPXPESjBnch6X","tls":"","persist":false,"proxy":"","authType":"","x":350,"y":1740,"wires":[["8bfd2b93dc1971f6"]]},{"id":"8bfd2b93dc1971f6","type":"csv","z":"2bc3b84e0697379a","name":"","sep":",","hdrin":true,"hdrout":"none","multi":"one","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":false,"include_null_values":"","x":510,"y":1740,"wires":[["6c452b76f14d24b0"]]},{"id":"5df25c272a084042","type":"change","z":"2bc3b84e0697379a","name":"","rules":[{"t":"set","p":"now","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":790,"y":1740,"wires":[["204272d65a207efa"]]},{"id":"6c452b76f14d24b0","type":"random","z":"2bc3b84e0697379a","name":"","low":"3","high":"5","inte":"true","property":"payload.random","x":640,"y":1740,"wires":[["5df25c272a084042"]]},{"id":"c8175cd47c0d1b97","type":"function","z":"2bc3b84e0697379a","name":"Influx Prepare Fields and Tags","func":"//InfluxDB node recieves data in payload, in an array object of two parts.\nmsg.payload = [{\n//Fields, field name on left, value on right\n    Brix_Sugar_Bag: msg.payload.Brix_Sugar_Bag,\n    Fruit_PH: msg.payload.Fruit_PH,\n    Manual_Brix: msg.payload.Manual_Brix,\n    Manual_PH: msg.payload.Manual_PH,\n    Sugar_Syrup: msg.payload.Sugar_Syrup,\n    Batch_ID: msg.payload[0].Batch_ID\n\n},\n{\n//Tags, Tag Name on left, tag value on right\n      Data_Type: \"Batch_QC_Lab_Checks\"\n}];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":1280,"wires":[["125ddd47a2bcd32b"]]},{"id":"78cdae84dd78ad6d","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":1300,"wires":[]},{"id":"aa45a24065c20da4","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB14","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":1300,"wires":[["78cdae84dd78ad6d"]]},{"id":"ba9106c209a8be71","type":"link in","z":"d3bbf792b935a55c","name":"MFIB14LT","links":["125ddd47a2bcd32b","5e7e5689d70bac09"],"x":375,"y":1300,"wires":[["aa45a24065c20da4"]]},{"id":"a201168dc5263f40","type":"comment","z":"d3bbf792b935a55c","name":"Factory 14 Uploader","info":"","x":450,"y":1240,"wires":[]},{"id":"5335dea15bde309b","type":"ui_dropdown","z":"2f77559e659d4c84","name":"","label":"Sugar Type","tooltip":"","place":"Select sugar type","group":"43d9ab7f5b004a50","order":6,"width":0,"height":0,"passthru":true,"multiple":false,"options":[{"label":"Granulated","value":"Granulated","type":"str"},{"label":"Candy ","value":"Candy","type":"str"},{"label":"Brown ","value":"Brown ","type":"str"},{"label":"Icing ","value":"Icing","type":"str"},{"label":"Caster","value":"Caster","type":"str"},{"label":"Demarera ","value":"Demarera ","type":"str"},{"label":"Inverted ","value":"Inverted ","type":"str"},{"label":"Cane ","value":"Cane","type":"str"}],"payload":"","topic":"Sugar Type","topicType":"str","x":750,"y":420,"wires":[["1bdc60397437fec1"]]},{"id":"446b2be9be4c343d","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":500,"y":420,"wires":[["5335dea15bde309b"]]},{"id":"70cbfd157d68241e","type":"link out","z":"2f77559e659d4c84","name":"Link to Influx Upoload","links":["461740b4dfa3d1d5"],"x":1315,"y":1640,"wires":[]},{"id":"91cd8d490e32be76","type":"ui_button","z":"2f77559e659d4c84","name":"","group":"b03d1b43277bb06f","order":10,"width":0,"height":0,"passthru":false,"label":"Submit","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":380,"y":1840,"wires":[["8e26c74b03e2d603"]]},{"id":"8e26c74b03e2d603","type":"change","z":"2f77559e659d4c84","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":550,"y":1840,"wires":[["a16695576b56ce8b"]]},{"id":"23773d9587416472","type":"debug","z":"2f77559e659d4c84","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1270,"y":940,"wires":[]},{"id":"01e1b131e1e5e558","type":"debug","z":"2f77559e659d4c84","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1040,"y":1700,"wires":[]},{"id":"3d86850753050bd4","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"0","topic":"","payload":"true","payloadType":"bool","x":50,"y":960,"wires":[["eea85fad0d1f2f55"]]},{"id":"b2ce0d3796bf20d4","type":"inject","z":"2f77559e659d4c84","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"0","topic":"","payload":"true","payloadType":"bool","x":50,"y":780,"wires":[["7a3146ec352da94e"]]},{"id":"a7f26aabd59bd061","type":"ui_button","z":"d3bbf792b935a55c","name":"","group":"5d08f31539a1a0a0","order":3,"width":0,"height":0,"passthru":false,"label":"Retrieve Factories","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","topicType":"str","x":90,"y":160,"wires":[["001ec410680affe9"]]},{"id":"800df71a65922ce1","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":770,"y":1500,"wires":[]},{"id":"c525cbf21f73822a","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":790,"y":1440,"wires":[]},{"id":"af6b4af1509ca7c3","type":"link in","z":"d3bbf792b935a55c","name":"MFIB113LT","links":["125ddd47a2bcd32b","5e7e5689d70bac09"],"x":355,"y":1440,"wires":[["d1467f8906789885"]]},{"id":"d1467f8906789885","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB113","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":1440,"wires":[["c525cbf21f73822a"]]},{"id":"92f0d785cb043c0e","type":"comment","z":"d3bbf792b935a55c","name":"Factory 113 Uploader","info":"","x":440,"y":1360,"wires":[]},{"id":"de9521e808332458","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":1720,"wires":[]},{"id":"fe83e9081ba758b0","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":1660,"wires":[]},{"id":"66dab2db9f3c2339","type":"link in","z":"d3bbf792b935a55c","name":"MFIB12LT","links":["125ddd47a2bcd32b","5e7e5689d70bac09"],"x":375,"y":1660,"wires":[["1ee5a1a73a49523f"]]},{"id":"1ee5a1a73a49523f","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB12","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":1660,"wires":[["fe83e9081ba758b0"]]},{"id":"f0a1234821e0d065","type":"comment","z":"d3bbf792b935a55c","name":"Factory 12 Uploader","info":"","x":450,"y":1580,"wires":[]},{"id":"6f78e1e071487fb0","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":1920,"wires":[]},{"id":"ce3e8dc579ea8313","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":1860,"wires":[]},{"id":"f35e5811254dfb36","type":"link in","z":"d3bbf792b935a55c","name":"MFIB107LT","links":["5e7e5689d70bac09"],"x":375,"y":1860,"wires":[["7f340a7f607550b0"]]},{"id":"7f340a7f607550b0","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB107","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":1860,"wires":[["ce3e8dc579ea8313"]]},{"id":"1951430bd5d250ae","type":"comment","z":"d3bbf792b935a55c","name":"Factory 107 Uploader","info":"","x":460,"y":1780,"wires":[]},{"id":"12b3f982d6a14ca4","type":"debug","z":"d3bbf792b935a55c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":2140,"wires":[]},{"id":"100c4767cb0065f4","type":"influxdb out","z":"d3bbf792b935a55c","influxdb":"0c1ec41161862665","name":"LTUploader","measurement":"","precision":"","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"60cd8b7dfddd66d6","bucket":"LongTermBucket","x":810,"y":2080,"wires":[]},{"id":"322c4fe43670c7df","type":"link in","z":"d3bbf792b935a55c","name":"MFIB108LT","links":["5e7e5689d70bac09"],"x":375,"y":2080,"wires":[["8942f30aeaab05c8"]]},{"id":"8942f30aeaab05c8","type":"change","z":"d3bbf792b935a55c","name":"","rules":[{"t":"set","p":"measurement","pt":"msg","to":"MFIB108","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":560,"y":2080,"wires":[["100c4767cb0065f4"]]},{"id":"52d678d8e1f14e19","type":"comment","z":"d3bbf792b935a55c","name":"Factory 108 Uploader","info":"","x":460,"y":2000,"wires":[]}]